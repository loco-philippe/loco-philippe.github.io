window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "tab-dataset.tab_dataset", "modulename": "tab-dataset.tab_dataset", "kind": "module", "doc": "<p><strong><em>TAB-Dataset Package</em></strong></p>\n\n<p>Created on Fri Dec 24 15:21:14 2021</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>This package contains the following classes and functions:</p>\n\n<ul>\n<li><p><code>tab-dataset.cfield</code> :</p>\n\n<ul>\n<li><code>tab-dataset.cfield.Cfield</code></li>\n<li><code>tab-dataset.cfield.Cutil</code></li>\n<li><code>tab-dataset.cfield.root</code> (function)</li>\n<li><code>tab-dataset.cfield.identity</code> (function)</li>\n</ul></li>\n<li><p><code>tab-dataset.cdataset</code> :</p>\n\n<ul>\n<li><code>tab-dataset.cdataset.Cdataset</code></li>\n</ul></li>\n<li><p><code>tab-dataset.field</code> :</p>\n\n<ul>\n<li><code>tab-dataset.field.Field</code></li>\n<li><code>tab-dataset.field.Nfield</code></li>\n<li><code>tab-dataset.field.Sfield</code></li>\n</ul></li>\n<li><p><code>tab-dataset.field_interface</code> :</p>\n\n<ul>\n<li><code>tab-dataset.field_interface.FieldInterface</code></li>\n<li><code>tab-dataset.field_interface.FieldEncoder</code></li>\n<li><code>tab-dataset.field_interface.CborDecoder</code></li>\n</ul></li>\n<li><p><code>tab-dataset.dataset</code> :</p>\n\n<ul>\n<li>`tab-dataset.dataset.Dataset    </li>\n</ul></li>\n<li><p><code>tab-dataset.dataset_structure</code> :</p>\n\n<ul>\n<li>`tab-dataset.dataset_structure.DatasetStructure</li>\n</ul></li>\n<li><p><code>tab-dataset.dataset_interface</code> :</p>\n\n<ul>\n<li>`tab-dataset.dataset_interface.DatasetInterface</li>\n</ul></li>\n<li><p><code>tab-dataset.dataset_analysis</code> :</p>\n\n<ul>\n<li>`tab-dataset.dataset_analysis.DatasetAnalysis</li>\n</ul></li>\n</ul>\n\n<p>Note: Analysis functions are in another package <code>tab-analysis</code> </p>\n\n<p>For more information, see the \n<a href=\"https://loco-philippe.github.io/tab-dataset/documentation/user_guide.html\">user guide</a> \nor the <a href=\"https://github.com/loco-philippe/tab-dataset\">github repository</a>.</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset", "modulename": "tab-dataset.tab_dataset.cdataset", "kind": "module", "doc": "<p>Created on Wed Oct 11 11:54:18 2023</p>\n\n<p>@author: phili</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset", "kind": "class", "doc": "<p>This class is the interface class with the tab_analysis module.</p>\n", "bases": "tab_dataset.dataset_analysis.DatasetAnalysis"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.__init__", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.__init__", "kind": "function", "doc": "<p>Dataset constructor.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listidx</strong> :  list (default None) - list of Field data</li>\n<li><strong>name</strong> :  string (default None) - name of the dataset</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec for each Field</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">listidx</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.indexlen", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.indexlen", "kind": "variable", "doc": "<p>list of index codec length</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.iindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.iindex", "kind": "variable", "doc": "<p>list of keys for each index</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.keys", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.keys", "kind": "variable", "doc": "<p>list of keys for each index</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.lenindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.lenindex", "kind": "variable", "doc": "<p>number of indexes</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.lunicname", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.lunicname", "kind": "variable", "doc": "<p>list of unique index name</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.lunicrow", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.lunicrow", "kind": "variable", "doc": "<p>list of unic idx row</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.lname", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.lname", "kind": "variable", "doc": "<p>list of index name</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.tiindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.tiindex", "kind": "variable", "doc": "<p>list of keys for each record</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.ntv", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.ntv", "kind": "function", "doc": "<p>Generate an Dataset Object from a ntv_value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>ntv_value</strong> : bytes, string, Ntv object to convert</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec for each Field</li>\n<li><strong>fast</strong> : boolean (default False) - if True, ntv_value are not converted in json-value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ntv_value</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.from_ntv", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.from_ntv", "kind": "function", "doc": "<p>Generate an Dataset Object from a ntv_value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>ntv_value</strong> : bytes, string, Ntv object to convert</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec for each Field</li>\n<li><strong>decode_str</strong>: boolean (default False) - if True, string are loaded in json data</li>\n<li><strong>fast</strong> : boolean (default False) - if True, ntv_value are not converted in json-value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ntv_value</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">decode_str</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.add", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.add", "kind": "function", "doc": "<p>Add other's values to self's values for each index</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>other</strong> : Dataset object to add to self object</li>\n<li><strong>name</strong> : Boolean (default False) - Add values with same index name (True) or\nsame index row (False)</li>\n<li><strong>solve</strong> : Boolean (default True) - If True, replace None other's codec value\nwith self codec value.</li>\n</ul>\n\n<p><em>Returns</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">solve</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.to_analysis", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.to_analysis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">distr</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.reindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.reindex", "kind": "function", "doc": "<p>Calculate a new default codec for each index (Return self)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.delindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.delindex", "kind": "function", "doc": "<p>remove an Field or a list of Field.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>delname</strong> : string or list of string - name of index to remove</li>\n<li><strong>savename</strong> : string or list of string - name of index to keep</li>\n</ul>\n\n<p><em>Returns</em> : none</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">delname</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">savename</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.nindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.nindex", "kind": "function", "doc": "<p>index with name equal to attribute name</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.renameindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.renameindex", "kind": "function", "doc": "<p>replace an index name 'oldname' by a new one 'newname'.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">oldname</span>, </span><span class=\"param\"><span class=\"n\">newname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.reorder", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.reorder", "kind": "function", "doc": "<p>Reorder records in the order define by 'recorder'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">recorder</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.setname", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.setname", "kind": "function", "doc": "<p>Update Field name by the name in listname</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listname</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.swapindex", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.swapindex", "kind": "function", "doc": "<p>Change the order of the index .</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>order</strong> : list of int or list of name - new order of index to apply.</li>\n</ul>\n\n<p><em>Returns</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">order</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.check_relation", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.check_relation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field</span>, </span><span class=\"param\"><span class=\"n\">parent</span>, </span><span class=\"param\"><span class=\"n\">typecoupl</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.Cdataset.check_relationship", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "Cdataset.check_relationship", "kind": "function", "doc": "<p>get the inconsistent records for each relationship defined in relations</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>relations</strong> : list of dict or single dict - list of fields with relationship property</li>\n</ul>\n\n<p><em>Returns</em> :</p>\n\n<ul>\n<li>dict with for each relationship: key = string with the two fields name,\nand value = list of inconsistent records</li>\n<li>or if single relationship : value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">relations</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cdataset.DatasetError", "modulename": "tab-dataset.tab_dataset.cdataset", "qualname": "DatasetError", "kind": "class", "doc": "<p>Dataset Exception</p>\n", "bases": "builtins.Exception"}, {"fullname": "tab-dataset.tab_dataset.cfield", "modulename": "tab-dataset.tab_dataset.cfield", "kind": "module", "doc": "<p>Created on Tue Oct 10 22:26:38 2023</p>\n\n<p>@author: a lab in the Air</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.root", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "root", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">leng</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.identity", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "identity", "kind": "function", "doc": "<p>return the same value as args or kwargs</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.identity", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.identity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">leng</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.canonorder", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.canonorder", "kind": "function", "doc": "<p>return a list of crossed keys from a list of number of values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lenidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.default", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.default", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.dist", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.dist", "kind": "function", "doc": "<p>return default coupling codec between two keys list and optionaly if \nthe relationship is distributed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k1</span>, </span><span class=\"param\"><span class=\"n\">k2</span>, </span><span class=\"param\"><span class=\"n\">distr</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.encode_coef", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.encode_coef", "kind": "function", "doc": "<p>Generate a repetition coefficient for periodic list</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.funclist", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.funclist", "kind": "function", "doc": "<p>return the function func applied to the object value with parameters args and kwargs</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">func</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.idxfull", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.idxfull", "kind": "function", "doc": "<p>return additional keys for each index in the setidx list to have crossed setidx</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">setidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.idxlink", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.idxlink", "kind": "function", "doc": "<p>return a dict for each different tuple (ref value, l2 value)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ref</span>, </span><span class=\"param\"><span class=\"n\">l2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.isNotEqual", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.isNotEqual", "kind": "function", "doc": "<p>return True if value and tovalue are not equal</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">tovalue</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.keysfromcoef", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.keysfromcoef", "kind": "function", "doc": "<p>return a list of keys with periodic structure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coef</span>, </span><span class=\"param\"><span class=\"n\">period</span>, </span><span class=\"param\"><span class=\"n\">leng</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.keysfromderkeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.keysfromderkeys", "kind": "function", "doc": "<p>return keys from parent keys and derkeys</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>parentkeys</strong> : list of keys from parent</li>\n<li><strong>derkeys</strong> : list of derived keys</li>\n</ul>\n\n<p><em>Returns</em> : list of keys</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parentkeys</span>, </span><span class=\"param\"><span class=\"n\">derkeys</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.list", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.list", "kind": "function", "doc": "<p>transform a list of tuples in a list of lists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tuplelists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.mul", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.mul", "kind": "function", "doc": "<p>return the product of values in a list or tuple (math.prod)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.reindex", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.reindex", "kind": "function", "doc": "<p>new keys with new order of codec</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">oldkeys</span>, </span><span class=\"param\"><span class=\"n\">oldcodec</span>, </span><span class=\"param\"><span class=\"n\">newcodec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.reorder", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.reorder", "kind": "function", "doc": "<p>return a new values list following the order define by sort</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span>, </span><span class=\"param\"><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.resetidx", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.resetidx", "kind": "function", "doc": "<p>return codec and keys from a list of values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.tocodec", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.tocodec", "kind": "function", "doc": "<p>extract a list of unique values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span>, </span><span class=\"param\"><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.tokeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.tokeys", "kind": "function", "doc": "<p>return a list of keys from a list of values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span>, </span><span class=\"param\"><span class=\"n\">codec</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.transpose", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.transpose", "kind": "function", "doc": "<p>exchange row/column in a list of list</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">idxlist</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cutil.tuple", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cutil.tuple", "kind": "function", "doc": "<p>transform a list of list in a list of tuple</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">idx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.__init__", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.__init__", "kind": "function", "doc": "<p>Two modes:</p>\n\n<ul>\n<li>a single attributes : Cfield object to copy</li>\n<li>multiple attributes : set codec, name and keys attributes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">codec</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.codec", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.codec", "kind": "variable", "doc": "<p>return codec</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.infos", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.infos", "kind": "variable", "doc": "<p>return dict with lencodec, typecodec, ratecodec, mincodec, maxcodec</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.keys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.keys", "kind": "variable", "doc": "<p>return keys</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.values", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.values", "kind": "variable", "doc": "<p>return values (see data model)</p>\n"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.from_ntv", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.from_ntv", "kind": "function", "doc": "<p>Generate an Field Object from a Ntv field object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">ntv_value</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">extkeys</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">decode_str</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_type</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">lengkeys</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.bol", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.bol", "kind": "function", "doc": "<p>Field constructor (boolean value).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>leng</strong> : integer - length of the Field</li>\n<li><strong>notdef</strong> : list (default None) - list of records without default value</li>\n<li><strong>default</strong> : boolean (default True) - default value</li>\n<li><strong>name</strong> : string (default None) - name of Field</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">leng</span>, </span><span class=\"param\"><span class=\"n\">notdef</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.like", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.like", "kind": "function", "doc": "<p>Generate an Field Object from specific codec and keys from another field.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>codec</strong> : list of objects</li>\n<li><strong>name</strong> : string (default None) - name of index (see data model)</li>\n<li><strong>parent</strong> : Field, parent of the new Field</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec is apply</li>\n</ul>\n\n<p><em>Returns</em> : Field</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">codec</span>, </span><span class=\"param\"><span class=\"n\">parent</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.ntv", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.ntv", "kind": "function", "doc": "<p>Generate an Field Object from a Ntv field object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ntv_value</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">extkeys</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">decode_str</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.ntv_to_val", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.ntv_to_val", "kind": "function", "doc": "<p>conversion in decode_ntv_val method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ntv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.n_to_i", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.n_to_i", "kind": "function", "doc": "<p>converting a NtvList value to an internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ntv_lis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.add", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.add", "kind": "function", "doc": "<p>Add other's values to self's values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>other</strong> : Field object to add to self object</li>\n<li><strong>solve</strong> : Boolean (default True) - If True, replace None other's codec value\nwith self codec value.</li>\n</ul>\n\n<p><em>Returns</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span>, </span><span class=\"param\"><span class=\"n\">solve</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.append", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.append", "kind": "function", "doc": "<p>add a new value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : new object value</li>\n<li><strong>unique</strong> :  boolean (default True) - If False, duplication codec if value is present</li>\n</ul>\n\n<p><em>Returns</em> : key of value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.coupling", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.coupling", "kind": "function", "doc": "<p>Transform indexes in coupled or derived indexes (codec extension).\nIf derived option is True, self._codec is extended and idx codec not,\nelse, both are coupled and both codec are extended.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>idx</strong> : single Field or list of Field to be coupled or derived.</li>\n<li><strong>derived</strong> : boolean (default : True) - if True result is derived,\nif False coupled</li>\n<li><strong>duplicate</strong> : boolean (default: True) - if True, return duplicate records \n(only for self index)</li>\n<li><strong>reindex</strong> : boolean (default : False). If True self.index is reindexed \nwith default codec. But if not derived, idx indexes MUST to be reindexed.</li>\n</ul>\n\n<p><em>Returns</em> : tuple with duplicate records (errors) if 'duplicate', None else</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span>, </span><span class=\"param\"><span class=\"n\">derived</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">duplicate</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.couplinginfos", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.couplinginfos", "kind": "function", "doc": "<p>return a dict with the coupling info between other (distance, ratecpl,\nrateder, dist, disttomin, disttomax, distmin, distmax, diff, typecoupl)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>other</strong> : other index to compare</li>\n<li><strong>default</strong> : comparison with default codec</li>\n</ul>\n\n<p><em>Returns</em> : dict</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.dist", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.dist", "kind": "function", "doc": "<p>return default coupling codec between two Cfield</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.derkeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.derkeys", "kind": "function", "doc": "<p>return keys derived from parent keys</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>parent</strong> : Field - parent</li>\n</ul>\n\n<p><em>Returns</em> : list of keys</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parent</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.extendkeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.extendkeys", "kind": "function", "doc": "<p>add keys to the Field</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>keys</strong> : list of int (value lower or equal than actual keys)</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">keys</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.full", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.full", "kind": "function", "doc": "<p>tranform a list of indexes in crossed indexes (value extension).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listidx</strong> : list of Field to transform</li>\n</ul>\n\n<p><em>Returns</em> : tuple of records added</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">listidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.getduplicates", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.getduplicates", "kind": "function", "doc": "<p>calculate items with duplicate codec</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>reindex</strong> : boolean (default : False). If True index is reindexed with default codec</li>\n</ul>\n\n<p><em>Returns</em> : tuple of items with duplicate codec</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.iscrossed", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.iscrossed", "kind": "function", "doc": "<p>return True if self is crossed to other</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.iscoupled", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.iscoupled", "kind": "function", "doc": "<p>return True if self is coupled to other</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.isderived", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.isderived", "kind": "function", "doc": "<p>return True if self is derived from other</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.iskeysfromderkeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.iskeysfromderkeys", "kind": "function", "doc": "<p>return True if self._keys is relative from other._keys</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.islinked", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.islinked", "kind": "function", "doc": "<p>return True if self is linked to other</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.isvalue", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.isvalue", "kind": "function", "doc": "<p>return True if value is in index values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to check</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.keytoval", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.keytoval", "kind": "function", "doc": "<p>return the value of a key</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>key</strong> : key to convert into values</li>\n<li><strong>extern</strong> : if True, return string representation else, internal value</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>int</strong> : first key finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.loc", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.loc", "kind": "function", "doc": "<p>return a list of record number with value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to check</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list of int</strong> : list of record number finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.recordfromvalue", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.recordfromvalue", "kind": "function", "doc": "<p>return a list of record number with value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to check</li>\n<li><strong>extern</strong> : if True, compare value to external representation of self.value,\nelse, internal</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list of int</strong> : list of record number finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.recordfromkeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.recordfromkeys", "kind": "function", "doc": "<p>return a list of record number with key in listkeys</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listkeys</strong> : list of keys to check</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list of int</strong> : list of record number finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listkeys</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.reindex", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.reindex", "kind": "function", "doc": "<p>apply a reordered codec. If None, a new default codec is apply.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>codec</strong> : list (default None) - reordered codec to apply.</li>\n</ul>\n\n<p><em>Returns</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">codec</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.reorder", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.reorder", "kind": "function", "doc": "<p>Change the Field order with a new order define by sort and reset the codec.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>sort</strong> : int list (default None)- new record order to apply. If None, no change.</li>\n<li><strong>inplace</strong> : boolean (default True) - if True, new order is apply to self,\nif False a new Field is created.</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>Field</strong> : self if inplace, new Field if not inplace</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.setcodecvalue", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.setcodecvalue", "kind": "function", "doc": "<p>update all the oldvalue by newvalue</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>oldvalue</strong> : list of values to replace</li>\n<li><strong>newvalue</strong> : list of new value to apply</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : int - last codec rank updated (-1 if None)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">oldvalue</span>, </span><span class=\"param\"><span class=\"n\">newvalue</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.setcodeclist", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.setcodeclist", "kind": "function", "doc": "<p>update codec with listcodec values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listcodec</strong> : list of new codec values to apply</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : int - last codec rank updated (-1 if None)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listcodec</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.set_keys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.set_keys", "kind": "function", "doc": "<p>_keys setters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">keys</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.set_codec", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.set_codec", "kind": "function", "doc": "<p>_codec setters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">codec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.setkeys", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.setkeys", "kind": "function", "doc": "<p>apply new keys (replace codec with extended codec from parent keys)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>keys</strong> : list of keys to apply</li>\n<li><strong>inplace</strong> : if True, update self data, else create a new Field</li>\n</ul>\n\n<p><em>Returns</em> : self or new Field</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">keys</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.setname", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.setname", "kind": "function", "doc": "<p>update the Field name</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>name</strong> : str to set into name</li>\n</ul>\n\n<p><em>Returns</em> : boolean - True if update</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.setvalue", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.setvalue", "kind": "function", "doc": "<p>update a value at the rank ind (and update codec and keys)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>ind</strong> : rank of the value</li>\n<li><strong>value</strong> : new value</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ind</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.setlistvalue", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.setlistvalue", "kind": "function", "doc": "<p>update the values (and update codec and keys)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listvalue</strong> : list - list of new values</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listvalue</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.sort", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.sort", "kind": "function", "doc": "<p>Define sorted index with ordered codec.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>reverse</strong> : boolean (defaut False) - codec is sorted with reverse order</li>\n<li><strong>inplace</strong> : boolean (default True) - if True, new order is apply to self,\nif False a new Field is created.</li>\n<li><strong>func</strong>    : function (default str) - key used in the sorted function</li>\n</ul>\n\n<p><em>Return</em></p>\n\n<ul>\n<li><strong>Field</strong> : self if inplace, new Field if not inplace</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\">func=&lt;class &#x27;str&#x27;&gt;</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.tocoupled", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.tocoupled", "kind": "function", "doc": "<p>Transform a derived index in a coupled index (keys extension) and add\nnew values to have the same length as other.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>other</strong> : index to be coupled.</li>\n<li><strong>coupling</strong> : boolean (default True) - reindex if False</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span>, </span><span class=\"param\"><span class=\"n\">coupling</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.tostdcodec", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.tostdcodec", "kind": "function", "doc": "<p>Transform codec in full or in default codec.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>inplace</strong> : boolean (default True) - if True, new order is apply to self,</li>\n<li><strong>full</strong> : boolean (default True) - if True reindex with full codec</li>\n</ul>\n\n<p><em>Return</em></p>\n\n<ul>\n<li><strong>Field</strong> : self if inplace, new Field if not inplace</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.Cfield.valtokey", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "Cfield.valtokey", "kind": "function", "doc": "<p>convert a value to a key</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to convert</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>int</strong> : first key finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.cfield.FieldError", "modulename": "tab-dataset.tab_dataset.cfield", "qualname": "FieldError", "kind": "class", "doc": "<p>Field Exception</p>\n", "bases": "builtins.Exception"}, {"fullname": "tab-dataset.tab_dataset.dataset", "modulename": "tab-dataset.tab_dataset.dataset", "kind": "module", "doc": "<p>Created on Thu May 26 20:30:00 2022</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>The <code>python.observation.dataset</code> module contains the <code>Dataset</code> class.</p>\n\n<p>Documentation is available in other pages :</p>\n\n<ul>\n<li>The Json Standard for Dataset is define\n<a href=\"https://github.com/loco-philippe/Environmental-Sensing/tree/main/documentation/DatasetJSON-Standard.pdf\">here</a></li>\n<li>The concept of 'indexed list' is describe in\n<a href=\"https://github.com/loco-philippe/Environmental-Sensing/wiki/Indexed-list\">this page</a>.</li>\n<li>The non-regression test are at\n<a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/python/Tests/test_dataset.py\">this page</a></li>\n<li>The <a href=\"https://github.com/loco-philippe/Environmental-Sensing/tree/main/python/Examples/Dataset\">examples</a>\nare :\n<ul>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/python/Examples/Dataset/Dataset_creation.ipynb\">creation</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/python/Examples/Dataset/Dataset_variable.ipynb\">variable</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/python/Examples/Dataset/Dataset_update.ipynb\">update</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/python/Examples/Dataset/Dataset_structure.ipynb\">structure</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/python/Examples/Dataset/Dataset_structure-analysis.ipynb\">structure-analysis</a></li>\n</ul></li>\n</ul>\n\n<hr />\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset", "kind": "class", "doc": "<p>An <code>Dataset</code> is a representation of an indexed list.</p>\n\n<p><em>Attributes (for @property see methods)</em> :</p>\n\n<ul>\n<li><strong>lindex</strong> : list of Field</li>\n<li><strong>analysis</strong> : Analysis object (data structure)</li>\n</ul>\n\n<p>The methods defined in this class are :</p>\n\n<p><em>constructor (@classmethod))</em></p>\n\n<ul>\n<li><code>Dataset.ntv</code></li>\n<li><code>Dataset.from_csv</code></li>\n<li><code>Dataset.from_ntv</code></li>\n<li><code>Dataset.from_file</code></li>\n<li><code>Dataset.merge</code></li>\n</ul>\n\n<p><em>abstract static methods (@abstractmethod, @staticmethod)</em></p>\n\n<ul>\n<li><code>Dataset.field_class</code></li>\n</ul>\n\n<p><em>dynamic value - module analysis (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.extidx</code></li>\n<li><code>Dataset.extidxext</code></li>\n<li><code>Dataset.groups</code></li>\n<li><code>Dataset.idxname</code></li>\n<li><code>Dataset.idxlen</code></li>\n<li><code>Dataset.iidx</code></li>\n<li><code>Dataset.lenidx</code></li>\n<li><code>Dataset.lidx</code></li>\n<li><code>Dataset.lidxrow</code></li>\n<li><code>Dataset.lisvar</code></li>\n<li><code>Dataset.lvar</code></li>\n<li><code>Dataset.lvarname</code></li>\n<li><code>Dataset.lvarrow</code></li>\n<li><code>Dataset.lunicname</code></li>\n<li><code>Dataset.lunicrow</code></li>\n<li><code>Dataset.primaryname</code></li>\n<li><code>Dataset.setidx</code></li>\n<li><code>Dataset.zip</code></li>\n</ul>\n\n<p><em>dynamic value (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.keys</code></li>\n<li><code>Dataset.iindex</code></li>\n<li><code>Dataset.indexlen</code></li>\n<li><code>Dataset.lenindex</code></li>\n<li><code>Dataset.lname</code></li>\n<li><code>Dataset.tiindex</code></li>\n</ul>\n\n<p><em>global value (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.complete</code></li>\n<li><code>Dataset.consistent</code></li>\n<li><code>Dataset.dimension</code></li>\n<li><code>Dataset.lencomplete</code></li>\n<li><code>Dataset.primary</code></li>\n<li><code>Dataset.secondary</code></li>\n</ul>\n\n<p><em>selecting - infos methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.idxrecord</code></li>\n<li><code>Dataset.indexinfos</code></li>\n<li><code>Dataset.indicator</code></li>\n<li><code>Dataset.iscanonorder</code></li>\n<li><code>Dataset.isinrecord</code></li>\n<li><code>Dataset.keytoval</code></li>\n<li><code>Dataset.loc</code></li>\n<li><code>Dataset.nindex</code></li>\n<li><code>Dataset.record</code></li>\n<li><code>Dataset.recidx</code></li>\n<li><code>Dataset.recvar</code></li>\n<li><code>Dataset.tree</code></li>\n<li><code>Dataset.valtokey</code></li>\n</ul>\n\n<p><em>add - update methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.add</code></li>\n<li><code>Dataset.addindex</code></li>\n<li><code>Dataset.append</code></li>\n<li><code>Dataset.delindex</code></li>\n<li><code>Dataset.delrecord</code></li>\n<li><code>Dataset.orindex</code></li>\n<li><code>Dataset.renameindex</code></li>\n<li><code>Dataset.setvar</code></li>\n<li><code>Dataset.setname</code></li>\n<li><code>Dataset.updateindex</code></li>\n</ul>\n\n<p><em>structure management - methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.applyfilter</code></li>\n<li><code>Dataset.coupling</code></li>\n<li><code>Dataset.full</code></li>\n<li><code>Dataset.getduplicates</code></li>\n<li><code>Dataset.mix</code></li>\n<li><code>Dataset.merging</code></li>\n<li><code>Dataset.reindex</code></li>\n<li><code>Dataset.reorder</code></li>\n<li><code>Dataset.setfilter</code></li>\n<li><code>Dataset.sort</code></li>\n<li><code>Dataset.swapindex</code></li>\n<li><code>Dataset.setcanonorder</code></li>\n<li><code>Dataset.tostdcodec</code></li>\n</ul>\n\n<p><em>exports methods (<code>observation.dataset_interface.DatasetInterface</code>)</em></p>\n\n<ul>\n<li><code>Dataset.json</code></li>\n<li><code>Dataset.plot</code></li>\n<li><code>Dataset.to_obj</code></li>\n<li><code>Dataset.to_csv</code></li>\n<li><code>Dataset.to_dataframe</code></li>\n<li><code>Dataset.to_file</code></li>\n<li><code>Dataset.to_ntv</code></li>\n<li><code>Dataset.to_obj</code></li>\n<li><code>Dataset.to_xarray</code></li>\n<li><code>Dataset.view</code></li>\n<li><code>Dataset.vlist</code></li>\n<li><code>Dataset.voxel</code></li>\n</ul>\n", "bases": "tab_dataset.dataset_structure.DatasetStructure, tab_dataset.dataset_interface.DatasetInterface, abc.ABC, tab_dataset.cdataset.Cdataset"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.__init__", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.__init__", "kind": "function", "doc": "<p>Dataset constructor.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listidx</strong> :  list (default None) - list of Field data</li>\n<li><strong>name</strong> :  string (default None) - name of the dataset</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec for each Field</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">listidx</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.from_csv", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.from_csv", "kind": "function", "doc": "<p>Dataset constructor (from a csv file). Each column represents index values.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>filename</strong> : string (default 'dataset.csv'), name of the file to read</li>\n<li><strong>header</strong> : boolean (default True). If True, the first raw is dedicated to names</li>\n<li><strong>nrow</strong> : integer (default None). Number of row. If None, all the row else nrow</li>\n<li><strong>optcsv</strong> : dict (default : quoting) - see csv.reader options</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">&#39;dataset.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">nrow</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">decode_str</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">decode_json</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">optcsv</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;quoting&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.from_file", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.from_file", "kind": "function", "doc": "<p>Generate Object from file storage.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>filename</strong> : string - file name (with path)</li>\n<li><strong>forcestring</strong> : boolean (default False) - if True,\nforces the UTF-8 data format, else the format is calculated</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec for each Field</li>\n<li><strong>decode_str</strong>: boolean (default False) - if True, string are loaded in json data</li>\n</ul>\n\n<p><em>Returns</em> : new Object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">forcestring</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">decode_str</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.merge", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.merge", "kind": "function", "doc": "<p>Merge method replaces Dataset objects included into its constituents.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>fillvalue</strong> : object (default nan) - value used for the additional data</li>\n<li><strong>reindex</strong> : boolean (default False) - if True, set default codec after transformation</li>\n<li><strong>simplename</strong> : boolean (default False) - if True, new Field name are\nthe same as merged Field name else it is a composed name.</li>\n</ul>\n\n<p><em>Returns</em>: merged Dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fillvalue</span><span class=\"o\">=</span><span class=\"n\">nan</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">simplename</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.ext", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.ext", "kind": "function", "doc": "<p>Dataset constructor (external index).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>idxval</strong> : list of Field or list of values (see data model)</li>\n<li><strong>idxname</strong> : list of string (default None) - list of Field name (see data model)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">idxval</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">idxname</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.complete", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.complete", "kind": "variable", "doc": "<p>return a boolean (True if Dataset is complete and consistent)</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.consistent", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.consistent", "kind": "variable", "doc": "<p>True if all the record are different</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.extidx", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.extidx", "kind": "variable", "doc": "<p>idx values (see data model)</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.extidxext", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.extidxext", "kind": "variable", "doc": "<p>idx val (see data model)</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.idxname", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.idxname", "kind": "variable", "doc": "<p>list of idx name</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.idxlen", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.idxlen", "kind": "variable", "doc": "<p>list of idx codec length</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.iidx", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.iidx", "kind": "variable", "doc": "<p>list of keys for each idx</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lencomplete", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lencomplete", "kind": "variable", "doc": "<p>number of values if complete (prod(idxlen primary))</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lenidx", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lenidx", "kind": "variable", "doc": "<p>number of idx</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lidx", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lidx", "kind": "variable", "doc": "<p>list of idx</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lisvar", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lisvar", "kind": "variable", "doc": "<p>list of boolean : True if Field is var</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lvar", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lvar", "kind": "variable", "doc": "<p>list of var</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lvarrow", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lvarrow", "kind": "variable", "doc": "<p>list of var row</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.lidxrow", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.lidxrow", "kind": "variable", "doc": "<p>list of idx row</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.primary", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.primary", "kind": "variable", "doc": "<p>list of primary idx</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.secondary", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.secondary", "kind": "variable", "doc": "<p>list of secondary idx</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.setidx", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.setidx", "kind": "variable", "doc": "<p>list of codec for each idx</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Dataset.zip", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Dataset.zip", "kind": "variable", "doc": "<p>return a zip format for transpose(extidx) : tuple(tuple(rec))</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset.Ndataset", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Ndataset", "kind": "class", "doc": "<p>An <code>Dataset</code> is a representation of an indexed list.</p>\n\n<p><em>Attributes (for @property see methods)</em> :</p>\n\n<ul>\n<li><strong>lindex</strong> : list of Field</li>\n<li><strong>analysis</strong> : Analysis object (data structure)</li>\n</ul>\n\n<p>The methods defined in this class are :</p>\n\n<p><em>constructor (@classmethod))</em></p>\n\n<ul>\n<li><code>Dataset.ntv</code></li>\n<li><code>Dataset.from_csv</code></li>\n<li><code>Dataset.from_ntv</code></li>\n<li><code>Dataset.from_file</code></li>\n<li><code>Dataset.merge</code></li>\n</ul>\n\n<p><em>abstract static methods (@abstractmethod, @staticmethod)</em></p>\n\n<ul>\n<li><code>Dataset.field_class</code></li>\n</ul>\n\n<p><em>dynamic value - module analysis (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.extidx</code></li>\n<li><code>Dataset.extidxext</code></li>\n<li><code>Dataset.groups</code></li>\n<li><code>Dataset.idxname</code></li>\n<li><code>Dataset.idxlen</code></li>\n<li><code>Dataset.iidx</code></li>\n<li><code>Dataset.lenidx</code></li>\n<li><code>Dataset.lidx</code></li>\n<li><code>Dataset.lidxrow</code></li>\n<li><code>Dataset.lisvar</code></li>\n<li><code>Dataset.lvar</code></li>\n<li><code>Dataset.lvarname</code></li>\n<li><code>Dataset.lvarrow</code></li>\n<li><code>Dataset.lunicname</code></li>\n<li><code>Dataset.lunicrow</code></li>\n<li><code>Dataset.primaryname</code></li>\n<li><code>Dataset.setidx</code></li>\n<li><code>Dataset.zip</code></li>\n</ul>\n\n<p><em>dynamic value (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.keys</code></li>\n<li><code>Dataset.iindex</code></li>\n<li><code>Dataset.indexlen</code></li>\n<li><code>Dataset.lenindex</code></li>\n<li><code>Dataset.lname</code></li>\n<li><code>Dataset.tiindex</code></li>\n</ul>\n\n<p><em>global value (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.complete</code></li>\n<li><code>Dataset.consistent</code></li>\n<li><code>Dataset.dimension</code></li>\n<li><code>Dataset.lencomplete</code></li>\n<li><code>Dataset.primary</code></li>\n<li><code>Dataset.secondary</code></li>\n</ul>\n\n<p><em>selecting - infos methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.idxrecord</code></li>\n<li><code>Dataset.indexinfos</code></li>\n<li><code>Dataset.indicator</code></li>\n<li><code>Dataset.iscanonorder</code></li>\n<li><code>Dataset.isinrecord</code></li>\n<li><code>Dataset.keytoval</code></li>\n<li><code>Dataset.loc</code></li>\n<li><code>Dataset.nindex</code></li>\n<li><code>Dataset.record</code></li>\n<li><code>Dataset.recidx</code></li>\n<li><code>Dataset.recvar</code></li>\n<li><code>Dataset.tree</code></li>\n<li><code>Dataset.valtokey</code></li>\n</ul>\n\n<p><em>add - update methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.add</code></li>\n<li><code>Dataset.addindex</code></li>\n<li><code>Dataset.append</code></li>\n<li><code>Dataset.delindex</code></li>\n<li><code>Dataset.delrecord</code></li>\n<li><code>Dataset.orindex</code></li>\n<li><code>Dataset.renameindex</code></li>\n<li><code>Dataset.setvar</code></li>\n<li><code>Dataset.setname</code></li>\n<li><code>Dataset.updateindex</code></li>\n</ul>\n\n<p><em>structure management - methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.applyfilter</code></li>\n<li><code>Dataset.coupling</code></li>\n<li><code>Dataset.full</code></li>\n<li><code>Dataset.getduplicates</code></li>\n<li><code>Dataset.mix</code></li>\n<li><code>Dataset.merging</code></li>\n<li><code>Dataset.reindex</code></li>\n<li><code>Dataset.reorder</code></li>\n<li><code>Dataset.setfilter</code></li>\n<li><code>Dataset.sort</code></li>\n<li><code>Dataset.swapindex</code></li>\n<li><code>Dataset.setcanonorder</code></li>\n<li><code>Dataset.tostdcodec</code></li>\n</ul>\n\n<p><em>exports methods (<code>observation.dataset_interface.DatasetInterface</code>)</em></p>\n\n<ul>\n<li><code>Dataset.json</code></li>\n<li><code>Dataset.plot</code></li>\n<li><code>Dataset.to_obj</code></li>\n<li><code>Dataset.to_csv</code></li>\n<li><code>Dataset.to_dataframe</code></li>\n<li><code>Dataset.to_file</code></li>\n<li><code>Dataset.to_ntv</code></li>\n<li><code>Dataset.to_obj</code></li>\n<li><code>Dataset.to_xarray</code></li>\n<li><code>Dataset.view</code></li>\n<li><code>Dataset.vlist</code></li>\n<li><code>Dataset.voxel</code></li>\n</ul>\n", "bases": "Dataset"}, {"fullname": "tab-dataset.tab_dataset.dataset.Sdataset", "modulename": "tab-dataset.tab_dataset.dataset", "qualname": "Sdataset", "kind": "class", "doc": "<p>An <code>Dataset</code> is a representation of an indexed list.</p>\n\n<p><em>Attributes (for @property see methods)</em> :</p>\n\n<ul>\n<li><strong>lindex</strong> : list of Field</li>\n<li><strong>analysis</strong> : Analysis object (data structure)</li>\n</ul>\n\n<p>The methods defined in this class are :</p>\n\n<p><em>constructor (@classmethod))</em></p>\n\n<ul>\n<li><code>Dataset.ntv</code></li>\n<li><code>Dataset.from_csv</code></li>\n<li><code>Dataset.from_ntv</code></li>\n<li><code>Dataset.from_file</code></li>\n<li><code>Dataset.merge</code></li>\n</ul>\n\n<p><em>abstract static methods (@abstractmethod, @staticmethod)</em></p>\n\n<ul>\n<li><code>Dataset.field_class</code></li>\n</ul>\n\n<p><em>dynamic value - module analysis (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.extidx</code></li>\n<li><code>Dataset.extidxext</code></li>\n<li><code>Dataset.groups</code></li>\n<li><code>Dataset.idxname</code></li>\n<li><code>Dataset.idxlen</code></li>\n<li><code>Dataset.iidx</code></li>\n<li><code>Dataset.lenidx</code></li>\n<li><code>Dataset.lidx</code></li>\n<li><code>Dataset.lidxrow</code></li>\n<li><code>Dataset.lisvar</code></li>\n<li><code>Dataset.lvar</code></li>\n<li><code>Dataset.lvarname</code></li>\n<li><code>Dataset.lvarrow</code></li>\n<li><code>Dataset.lunicname</code></li>\n<li><code>Dataset.lunicrow</code></li>\n<li><code>Dataset.primaryname</code></li>\n<li><code>Dataset.setidx</code></li>\n<li><code>Dataset.zip</code></li>\n</ul>\n\n<p><em>dynamic value (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.keys</code></li>\n<li><code>Dataset.iindex</code></li>\n<li><code>Dataset.indexlen</code></li>\n<li><code>Dataset.lenindex</code></li>\n<li><code>Dataset.lname</code></li>\n<li><code>Dataset.tiindex</code></li>\n</ul>\n\n<p><em>global value (getters @property)</em></p>\n\n<ul>\n<li><code>Dataset.complete</code></li>\n<li><code>Dataset.consistent</code></li>\n<li><code>Dataset.dimension</code></li>\n<li><code>Dataset.lencomplete</code></li>\n<li><code>Dataset.primary</code></li>\n<li><code>Dataset.secondary</code></li>\n</ul>\n\n<p><em>selecting - infos methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.idxrecord</code></li>\n<li><code>Dataset.indexinfos</code></li>\n<li><code>Dataset.indicator</code></li>\n<li><code>Dataset.iscanonorder</code></li>\n<li><code>Dataset.isinrecord</code></li>\n<li><code>Dataset.keytoval</code></li>\n<li><code>Dataset.loc</code></li>\n<li><code>Dataset.nindex</code></li>\n<li><code>Dataset.record</code></li>\n<li><code>Dataset.recidx</code></li>\n<li><code>Dataset.recvar</code></li>\n<li><code>Dataset.tree</code></li>\n<li><code>Dataset.valtokey</code></li>\n</ul>\n\n<p><em>add - update methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.add</code></li>\n<li><code>Dataset.addindex</code></li>\n<li><code>Dataset.append</code></li>\n<li><code>Dataset.delindex</code></li>\n<li><code>Dataset.delrecord</code></li>\n<li><code>Dataset.orindex</code></li>\n<li><code>Dataset.renameindex</code></li>\n<li><code>Dataset.setvar</code></li>\n<li><code>Dataset.setname</code></li>\n<li><code>Dataset.updateindex</code></li>\n</ul>\n\n<p><em>structure management - methods (<code>observation.dataset_structure.DatasetStructure</code>)</em></p>\n\n<ul>\n<li><code>Dataset.applyfilter</code></li>\n<li><code>Dataset.coupling</code></li>\n<li><code>Dataset.full</code></li>\n<li><code>Dataset.getduplicates</code></li>\n<li><code>Dataset.mix</code></li>\n<li><code>Dataset.merging</code></li>\n<li><code>Dataset.reindex</code></li>\n<li><code>Dataset.reorder</code></li>\n<li><code>Dataset.setfilter</code></li>\n<li><code>Dataset.sort</code></li>\n<li><code>Dataset.swapindex</code></li>\n<li><code>Dataset.setcanonorder</code></li>\n<li><code>Dataset.tostdcodec</code></li>\n</ul>\n\n<p><em>exports methods (<code>observation.dataset_interface.DatasetInterface</code>)</em></p>\n\n<ul>\n<li><code>Dataset.json</code></li>\n<li><code>Dataset.plot</code></li>\n<li><code>Dataset.to_obj</code></li>\n<li><code>Dataset.to_csv</code></li>\n<li><code>Dataset.to_dataframe</code></li>\n<li><code>Dataset.to_file</code></li>\n<li><code>Dataset.to_ntv</code></li>\n<li><code>Dataset.to_obj</code></li>\n<li><code>Dataset.to_xarray</code></li>\n<li><code>Dataset.view</code></li>\n<li><code>Dataset.vlist</code></li>\n<li><code>Dataset.voxel</code></li>\n</ul>\n", "bases": "Dataset"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "kind": "module", "doc": "<p>Created on Sun Oct 31 2023</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>The <code>python.observation.dataset_analysis</code> module contains the <code>DatasetAnalysis</code> class\n(<code>python.observation.dataset.Dataset</code> methods).</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis", "kind": "class", "doc": "<p>This class is the interface class with the tab_analysis module.</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.anafields", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.anafields", "kind": "variable", "doc": "<p>list of AnaField</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.lvarname", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.lvarname", "kind": "variable", "doc": "<p>list of variable Field name</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.primaryname", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.primaryname", "kind": "variable", "doc": "<p>list of primary name</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.secondaryname", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.secondaryname", "kind": "variable", "doc": "<p>list of secondary name</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.indexinfos", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.indexinfos", "kind": "function", "doc": "<p>return a dict with infos of each index :\n    - num, name, cat, diffdistparent, child, parent, distparent, \n    crossed, pparent, rateder (struct info)\n    - lencodec, mincodec, maxcodec, typecodec, ratecodec (base info)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>keys</strong> : string, list or tuple (default None) - list of attributes \nto returned.\nif 'all' or None, all attributes are returned.\nif 'struct', only structural attributes are returned.</li>\n</ul>\n\n<p><em>Returns</em> : dict</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.field_partition", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.field_partition", "kind": "function", "doc": "<p>return a partition dict with the list of primary, secondary, unique\nand variable fields (index).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>partition</strong> : list (default None) - if None, partition is the first</li>\n<li><strong>mode</strong> : str (default 'index') - Field representation ('id', 'index')</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">partition</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;index&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.relation", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.relation", "kind": "function", "doc": "<p>relationship between two fields</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fld1</span>, </span><span class=\"param\"><span class=\"n\">fld2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.tree", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.tree", "kind": "function", "doc": "<p>return a string with a tree of derived Field.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>lname</strong> : integer (default 20) - length of the names        </li>\n<li><strong>width</strong> : integer (default 5) - length of the lines        </li>\n<li><strong>string</strong> : boolean (default True) - if True return str else return dict</li>\n<li><strong>mode</strong> : string (default 'derived') - kind of tree :\n'derived' : derived tree\n'distance': min distance tree\n'distomin': min distomin tree</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;derived&#39;</span>, </span><span class=\"param\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">lname</span><span class=\"o\">=</span><span class=\"mi\">20</span>, </span><span class=\"param\"><span class=\"n\">string</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_analysis.DatasetAnalysis.indicator", "modulename": "tab-dataset.tab_dataset.dataset_analysis", "qualname": "DatasetAnalysis.indicator", "kind": "function", "doc": "<p>generate size indicators: ol (object lightness), ul (unicity level), \ngain (sizegain)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>fullsize</strong> : int (default none) - size with full codec</li>\n<li><strong>size</strong> : int (default none) - size with existing codec</li>\n</ul>\n\n<p><em>Returns</em> : dict</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fullsize</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface", "modulename": "tab-dataset.tab_dataset.dataset_interface", "kind": "module", "doc": "<p>Created on Sun Oct  2 22:24:59 2022</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>The <code>python.observation.dataset_interface</code> module contains the <code>DatasetInterface</code> class\n(<code>python.observation.dataset.Dataset</code> methods).</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface", "kind": "class", "doc": "<p>this class includes Dataset methods :</p>\n\n<ul>\n<li><code>DatasetInterface.json</code></li>\n<li><code>DatasetInterface.plot</code></li>\n<li><code>DatasetInterface.to_obj</code></li>\n<li><code>DatasetInterface.to_csv</code></li>\n<li><code>DatasetInterface.to_file</code></li>\n<li><code>DatasetInterface.to_xarray</code></li>\n<li><code>DatasetInterface.to_dataframe</code></li>\n<li><code>DatasetInterface.view</code></li>\n<li><code>DatasetInterface.vlist</code></li>\n<li><code>DatasetInterface.voxel</code></li>\n</ul>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.json", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.json", "kind": "function", "doc": "<p>Return json dict, json string or Cbor binary.</p>\n\n<p><em>Parameters (kwargs)</em></p>\n\n<ul>\n<li><strong>encoded</strong> : boolean (default False) - choice for return format\n(string/bytes if True, dict else)</li>\n<li><strong>format</strong>  : string (default 'json')- choice for return format (json, cbor)</li>\n<li><strong>codif</strong> : dict (default ES.codeb). Numerical value for string in CBOR encoder</li>\n<li><strong>modecodec</strong> : string (default 'optimize') - if 'full', each index is with a full codec\nif 'default' each index has keys, if 'optimize' keys are optimized, \nif 'dict' dict format is used, if 'nokeys' keys are absent</li>\n<li><strong>name</strong> : boolean (default False) - if False, default index name are not included</li>\n<li><strong>geojson</strong> : boolean (default False) - geojson for LocationValue if True</li>\n</ul>\n\n<p><em>Returns</em> : string or dict</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.plot", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.plot", "kind": "function", "doc": "<p>This function visualize data with line or colormesh.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>varname</strong> : string (default none) - Name of the variable to use. If None,\nfirst lvarname is used.</li>\n<li><strong>line</strong> : Boolean (default True) - Choice line or colormesh.</li>\n<li><strong>order</strong> : list (defaut None) - order of the axes (x, y, hue or col)</li>\n<li><strong>size</strong> : int (defaut 5) - plot size</li>\n<li><strong>marker</strong> : Char (default 'o') - Symbol for each point.</li>\n<li><strong>maxlen</strong> : Integer (default 20) - maximum length for string</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">varname</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">idxname</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;o&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">20</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.to_csv", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.to_csv", "kind": "function", "doc": "<p>Generate csv file to display data.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>filename</strong> : string - file name (with path)</li>\n<li><strong>optcsv</strong> : parameter for csv.writer</li>\n</ul>\n\n<p><em>Parameters (kwargs)</em></p>\n\n<ul>\n<li><strong>name=listcode</strong> : element (default None) - eg location='ns'\n<ul>\n<li>listcode : string with Code for each index (j: json, n: name, s: simple).</li>\n<li>name : name of the index</li>\n</ul></li>\n<li><strong>lenres</strong> : Integer (default : 0) - Number of raws (all if 0)</li>\n<li><strong>header</strong> : Boolean (default : True) - If True, first line with names</li>\n<li><strong>optcsv</strong> : parameter for csv.writer</li>\n<li><strong>ifunc</strong> : function (default None) - function to apply to indexes</li>\n<li><strong>other kwargs</strong> : parameter for ifunc</li>\n</ul>\n\n<p><em>Returns</em> : size of csv file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">optcsv</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;quoting&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.to_dataframe", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.to_dataframe", "kind": "function", "doc": "<p>Complete the Object and generate a Pandas DataFrame with the dimension define by idx.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>info</strong> : boolean (default False) - if True, add _dict attributes to attrs Xarray</li>\n<li><strong>idx</strong> : list (default none) - list of idx to be completed. If [],\nself.primary is used.</li>\n<li><strong>fillvalue</strong> : object (default '?') - value used for the new extval</li>\n<li><strong>fillextern</strong> : boolean(default True) - if True, fillvalue is converted to internal value</li>\n<li><strong>lisfunc</strong> : function (default none) - list of function to apply to indexes before export</li>\n<li><strong>name</strong> : string (default None) - DataArray name. If None, variable name</li>\n<li><strong>numeric</strong> : Boolean (default False) - Generate a numeric DataArray.Values.</li>\n<li><strong>npdtype</strong> : string (default None) - numpy dtype for the DataArray ('object' if None)</li>\n<li><strong>kwargs</strong> : parameter for lisfunc</li>\n</ul>\n\n<p><em>Returns</em> : pandas.DataFrame</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fillvalue</span><span class=\"o\">=</span><span class=\"s1\">&#39;?&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fillextern</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">lisfunc</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">numeric</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">npdtype</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.to_file", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.to_file", "kind": "function", "doc": "<p>Generate file to display data.</p>\n\n<p><em>Parameters (kwargs)</em></p>\n\n<ul>\n<li><strong>filename</strong> : string - file name (with path)</li>\n<li><strong>kwargs</strong> : see 'to_ntv' parameters</li>\n</ul>\n\n<p><em>Returns</em> : Integer - file lenght (bytes)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.to_ntv", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.to_ntv", "kind": "function", "doc": "<p>Return a Ntv tab value (whithout name) .</p>\n\n<p><em>Parameters (kwargs)</em></p>\n\n<ul>\n<li><strong>modecodec</strong> : string (default 'optimize') - if 'full', each index is with a full codec\nif 'default' each index has keys, if 'optimize' keys are optimized, \nif 'dict' dict format is used, if 'nokeys' keys are absent</li>\n<li><strong>def_type</strong> : string (default 'json') - default ntv_type for NtvList or NtvSet</li>\n<li><strong>name</strong> : boolean (default False) - if False, default index name are not included</li>\n</ul>\n\n<p><em>Returns</em> : Ntv object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">modecodec</span><span class=\"o\">=</span><span class=\"s1\">&#39;optimize&#39;</span>, </span><span class=\"param\"><span class=\"n\">def_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;json&#39;</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.to_xarray", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.to_xarray", "kind": "function", "doc": "<p>Complete the Object and generate a Xarray DataArray with the dimension define by idx.\nOnly the first variable is incuded.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>info</strong> : boolean (default False) - if True, add _dict attributes to attrs Xarray</li>\n<li><strong>idxname</strong> : list (default none) - list of idx to be completed. If None,\nself.primary is used.</li>\n<li><strong>varname</strong> : string (default none) - Name of the variable to use. If None,\nfirst lvarname is used.</li>\n<li><strong>fillvalue</strong> : object (default '?') - value used for the new extval</li>\n<li><strong>fillextern</strong> : boolean(default True) - if True, fillvalue is converted to internal value</li>\n<li><strong>lisfunc</strong> : function (default none) - list of function to apply to indexes before export</li>\n<li><strong>name</strong> : string (default None) - DataArray name. If None, variable name</li>\n<li><strong>numeric</strong> : Boolean (default False) - Generate a numeric DataArray.Values.</li>\n<li><strong>npdtype</strong> : string (default None) - numpy dtype for the DataArray ('object' if None)</li>\n<li><strong>attrs</strong> : dict (default None) - attributes for the DataArray</li>\n<li><strong>coord</strong> : boolean (default False) - if True, add derivated coords</li>\n<li><strong>kwargs</strong> : parameter for lisfunc</li>\n</ul>\n\n<p><em>Returns</em> : DataArray</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">idxname</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">varname</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fillvalue</span><span class=\"o\">=</span><span class=\"s1\">&#39;?&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fillextern</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">lisfunc</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">numeric</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">npdtype</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">coord</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.voxel", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.voxel", "kind": "function", "doc": "<p>Plot not null values in a cube with voxels and return indexes values.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>idxname</strong> : list (default none) - list of idx to be completed. If None,\nself.primary is used.</li>\n<li><strong>varname</strong> : string (default none) - Name of the variable to use. If None,\nfirst lvarname is used.</li>\n</ul>\n\n<p><em>Returns</em> : <strong>dict of indexes values</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idxname</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">varname</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.view", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.view", "kind": "function", "doc": "<p>Generate tabular list to display data.</p>\n\n<p><em>Parameters (kwargs)</em></p>\n\n<ul>\n<li><strong>name=listcode</strong> : element (default None) - eg location='ns'\n<ul>\n<li>listcode : string with Code for each index (j: json, n: name, s: simple).</li>\n<li>name : name of the index</li>\n</ul></li>\n<li><strong>defcode</strong> : String (default : 'j') - default list code (if 'all' is True)</li>\n<li><strong>all</strong> : Boolean (default : True) - 'defcode apply to all indexes or none</li>\n<li><strong>lenres</strong> : Integer (default : 0) - Number of raws (all if 0)</li>\n<li><strong>header</strong> : Boolean (default : True) - First line with names</li>\n<li><strong>width</strong> : Integer (default None) - Number of characters displayed for each\nattribute (all if None)</li>\n<li><strong>ifunc</strong> : function (default None) - function to apply to indexes</li>\n<li><strong>tabulate params</strong> : default 'tablefmt': 'simple', 'numalign': 'left',\n'stralign': 'left', 'floatfmt': '.3f' - See tabulate module</li>\n<li><strong>other kwargs</strong> : parameter for ifunc</li>\n</ul>\n\n<p><em>Returns</em> : list or html table (tabulate format)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_interface.DatasetInterface.vlist", "modulename": "tab-dataset.tab_dataset.dataset_interface", "qualname": "DatasetInterface.vlist", "kind": "function", "doc": "<p>Apply a function to an index and return the result.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>func</strong> : function (default none) - function to apply to extval or extidx</li>\n<li><strong>args, kwargs</strong> : parameters for the function</li>\n<li><strong>index</strong> : integer - index to update (index=-1 for first variable)</li>\n</ul>\n\n<p><em>Returns</em> : list of func result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure", "modulename": "tab-dataset.tab_dataset.dataset_structure", "kind": "module", "doc": "<p>Created on Sun Oct  2 22:24:59 2022</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>The <code>python.observation.dataset_structure</code> module contains the <code>DatasetStructure</code> class\n(<code>python.observation.dataset.Dataset</code> methods).</p>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure", "kind": "class", "doc": "<p>this class includes Dataset methods :</p>\n\n<p><em>selecting - infos methods</em></p>\n\n<ul>\n<li><code>DatasetStructure.idxrecord</code></li>\n<li><code>DatasetStructure.indexinfos</code></li>\n<li><code>DatasetStructure.indicator</code></li>\n<li><code>DatasetStructure.iscanonorder</code></li>\n<li><code>DatasetStructure.isinrecord</code></li>\n<li><code>DatasetStructure.keytoval</code></li>\n<li><code>DatasetStructure.loc</code></li>\n<li><code>DatasetStructure.nindex</code></li>\n<li><code>DatasetStructure.record</code></li>\n<li><code>DatasetStructure.recidx</code></li>\n<li><code>DatasetStructure.recvar</code></li>\n<li><code>DatasetStructure.tree</code></li>\n<li><code>DatasetStructure.valtokey</code></li>\n</ul>\n\n<p><em>add - update methods</em></p>\n\n<ul>\n<li><code>DatasetStructure.add</code></li>\n<li><code>DatasetStructure.addindex</code></li>\n<li><code>DatasetStructure.append</code></li>\n<li><code>DatasetStructure.delindex</code></li>\n<li><code>DatasetStructure.delrecord</code></li>\n<li><code>DatasetStructure.orindex</code></li>\n<li><code>DatasetStructure.renameindex</code></li>\n<li><code>DatasetStructure.setvar</code></li>\n<li><code>DatasetStructure.setname</code></li>\n<li><code>DatasetStructure.updateindex</code></li>\n</ul>\n\n<p><em>structure management - methods</em></p>\n\n<ul>\n<li><code>DatasetStructure.applyfilter</code></li>\n<li><code>DatasetStructure.coupling</code></li>\n<li><code>DatasetStructure.full</code></li>\n<li><code>DatasetStructure.getduplicates</code></li>\n<li><code>DatasetStructure.mix</code></li>\n<li><code>DatasetStructure.merging</code></li>\n<li><code>DatasetStructure.reindex</code></li>\n<li><code>DatasetStructure.reorder</code></li>\n<li><code>DatasetStructure.setfilter</code></li>\n<li><code>DatasetStructure.sort</code></li>\n<li><code>DatasetStructure.swapindex</code></li>\n<li><code>DatasetStructure.setcanonorder</code></li>\n<li><code>DatasetStructure.tostdcodec</code></li>\n</ul>\n"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.addindex", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.addindex", "kind": "function", "doc": "<p>add a new index.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>index</strong> : Field - index to add (can be index Ntv representation)</li>\n<li><strong>first</strong> : If True insert index at the first row, else at the end</li>\n<li><strong>merge</strong> : create a new index if merge is False</li>\n<li><strong>update</strong> : if True, update actual values if index name is present (and merge is True)</li>\n</ul>\n\n<p><em>Returns</em> : none</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">first</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">merge</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.append", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.append", "kind": "function", "doc": "<p>add a new record.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>record</strong> :  list of new index values to add to Dataset</li>\n<li><strong>unique</strong> :  boolean (default False) - Append isn't done if unique\nis True and record present</li>\n</ul>\n\n<p><em>Returns</em> : list - key record</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span>, </span><span class=\"param\"><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.applyfilter", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.applyfilter", "kind": "function", "doc": "<p>delete records with defined filter value.\nFilter is deleted after record filtering.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>reverse</strong> :  boolean (default False) - delete record with filter's \nvalue is reverse</li>\n<li><strong>filtname</strong> : string (default FILTER) - Name of the filter Field added</li>\n<li><strong>delfilter</strong> :  boolean (default True) - If True, delete filter's Field</li>\n<li><strong>inplace</strong> : boolean (default True) - if True, filter is apply to self,</li>\n</ul>\n\n<p><em>Returns</em> : self or new Dataset</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filtname</span><span class=\"o\">=</span><span class=\"s1\">&#39;$filter&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">delfilter</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.coupling_old", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.coupling_old", "kind": "function", "doc": "<p>Transform idx with low rate in coupled or derived indexes (codec extension).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>param</strong> : string (default 'rateder') - coupling measurement \n('rateder', 'diffdistparent', 'ratecpl', 'distance')</li>\n<li><strong>level</strong> : float (default 0.1) - param threshold to apply coupling.</li>\n<li><strong>derived</strong> : boolean (default : True). If True, indexes are derived, \nelse coupled.</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">derived</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">param</span><span class=\"o\">=</span><span class=\"s1\">&#39;rateder&#39;</span>, </span><span class=\"param\"><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.coupling", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.coupling", "kind": "function", "doc": "<p>Transform idx with low dist in coupled or derived indexes (codec extension).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>level</strong> : float (default 0.1) - param threshold to apply coupling.</li>\n<li><strong>derived</strong> : boolean (default : True). If True, indexes are derived, \nelse coupled.</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">derived</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.delrecord", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.delrecord", "kind": "function", "doc": "<p>remove a record.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>record</strong> :  list - index values to remove to Dataset</li>\n<li><strong>extern</strong> : if True, compare record values to external representation \nof self.value, else, internal</li>\n</ul>\n\n<p><em>Returns</em> : row deleted</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.full", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.full", "kind": "function", "doc": "<p>tranform a list of indexes in crossed indexes (value extension).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>idxname</strong> : list of string - name of indexes to transform</li>\n<li><strong>varname</strong> : string - name of indexes to use</li>\n<li><strong>reindex</strong> : boolean (default False) - if True, set default codec \nbefore transformation</li>\n<li><strong>fillvalue</strong> : object value used for var extension</li>\n<li><strong>fillextern</strong> : boolean(default True) - if True, fillvalue is converted \nto internal value</li>\n<li><strong>inplace</strong> : boolean (default True) - if True, filter is apply to self,</li>\n<li><strong>complete</strong> : boolean (default True) - if True, Field are ordered \nin canonical order</li>\n</ul>\n\n<p><em>Returns</em> : self or new Dataset</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">idxname</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">varname</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fillvalue</span><span class=\"o\">=</span><span class=\"s1\">&#39;-&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fillextern</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">complete</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.getduplicates", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.getduplicates", "kind": "function", "doc": "<p>check duplicate cod in a list of indexes. Result is add in a new \nindex or returned.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>indexname</strong> : list of string (default none) - name of indexes to check \n(if None, all Field)</li>\n<li><strong>resindex</strong> : string (default None) - Add a new index named resindex \nwith check result (False if duplicate)</li>\n<li><strong>indexview</strong> : list of str (default None) - list of fields to return</li>\n</ul>\n\n<p><em>Returns</em> : list of int - list of rows with duplicate cod</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indexname</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">resindex</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">indexview</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.iscanonorder", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.iscanonorder", "kind": "function", "doc": "<p>return True if primary indexes have canonical ordered keys</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.isinrecord", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.isinrecord", "kind": "function", "doc": "<p>Check if record is present in self.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>record</strong> : list - value for each Field</li>\n<li><strong>extern</strong> : if True, compare record values to external representation\nof self.value, else, internal</li>\n</ul>\n\n<p><em>Returns boolean</em> : True if found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.idxrecord", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.idxrecord", "kind": "function", "doc": "<p>return rec array (without variable) from complete record (with variable)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.keytoval", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.keytoval", "kind": "function", "doc": "<p>convert a keys list (key for each index) to a values list (value for each index).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listkey</strong> : key for each index</li>\n<li><strong>extern</strong> : boolean (default True) - if True, compare rec to val else to values</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list</strong> : value for each index</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listkey</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.loc", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.loc", "kind": "function", "doc": "<p>Return record or row corresponding to a list of idx values.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>rec</strong> : list - value for each idx</li>\n<li><strong>extern</strong> : boolean (default True) - if True, compare rec to val,\nelse to values</li>\n<li><strong>row</strong> : Boolean (default False) - if True, return list of row,\nelse list of records</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>object</strong> : variable value or None if not found</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rec</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.mix", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.mix", "kind": "function", "doc": "<p>add other Field not included in self and add other's values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span>, </span><span class=\"param\"><span class=\"n\">fillvalue</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.merging", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.merging", "kind": "function", "doc": "<p>add a new Field build with Field define in listname.\nValues of the new Field are set of values in listname Field</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listname</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.orindex", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.orindex", "kind": "function", "doc": "<p>Add other's index to self's index (with same length)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>other</strong> : self class - object to add</li>\n<li><strong>first</strong> : Boolean (default False) - If True insert indexes\nat the first row, else at the end</li>\n<li><strong>merge</strong> : Boolean (default False) - create a new index \nif merge is False</li>\n<li><strong>update</strong> : Boolean (default False) - if True, update actual \nvalues if index name is present (and merge is True)</li>\n</ul>\n\n<p><em>Returns</em> : none</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span>, </span><span class=\"param\"><span class=\"n\">first</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">merge</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.record", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.record", "kind": "function", "doc": "<p>return the record at the row</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>row</strong> : int - row of the record</li>\n<li><strong>extern</strong> : boolean (default True) - if True, return val record else\nvalue record</li>\n<li><p><strong>indexname</strong> : list of str (default None) - list of fields to return\n<em>Returns</em></p></li>\n<li><p><strong>list</strong> : val record or value record</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row</span>, </span><span class=\"param\"><span class=\"n\">indexname</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.recidx", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.recidx", "kind": "function", "doc": "<p>return the list of idx val or values at the row</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>row</strong> : int - row of the record</li>\n<li><strong>extern</strong> : boolean (default True) - if True, return val rec else value rec</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list</strong> : val or value for idx</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.recvar", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.recvar", "kind": "function", "doc": "<p>return the list of var val or values at the row</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>row</strong> : int - row of the record</li>\n<li><strong>extern</strong> : boolean (default True) - if True, return val rec else value rec</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list</strong> : val or value for var</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.setcanonorder", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.setcanonorder", "kind": "function", "doc": "<p>Set the canonical index order : primary - secondary/unique - variable.\nSet the canonical keys order : ordered keys in the first columns.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>reindex</strong> : boolean (default False) - if True, set default codec after\ntransformation</li>\n</ul>\n\n<p><em>Return</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.setfilter", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.setfilter", "kind": "function", "doc": "<p>Add a filter index with boolean values</p>\n\n<ul>\n<li><strong>filt</strong> : list of boolean - values of the filter idx to add</li>\n<li><strong>first</strong> : boolean (default False) - If True insert index at the first row,\nelse at the end</li>\n<li><strong>filtname</strong> : string (default FILTER) - Name of the filter Field added</li>\n</ul>\n\n<p><em>Returns</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filt</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">first</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">filtname</span><span class=\"o\">=</span><span class=\"s1\">&#39;$filter&#39;</span>, </span><span class=\"param\"><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.sort", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.sort", "kind": "function", "doc": "<p>Sort data following the index order and apply the ascending or descending\nsort function to values.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>order</strong> : list (default None)- new order of index to apply. If None or [],\nthe sort function is applied to the existing order of indexes.</li>\n<li><strong>reverse</strong> : boolean (default False)- ascending if True, descending if False</li>\n<li><strong>func</strong>    : function (default str) - parameter key used in the sorted function</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, apply a new codec order (key = func)</li>\n</ul>\n\n<p><em>Returns</em> : self</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">order</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\">func=&lt;class &#x27;str&#x27;&gt;, </span><span class=\"param\"><span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.tostdcodec", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.tostdcodec", "kind": "function", "doc": "<p>Transform all codec in full or default codec.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>inplace</strong> : boolean  (default False) - if True apply transformation\nto self, else to a new Dataset</li>\n<li><strong>full</strong> : boolean (default True)- full codec if True, default if False</li>\n</ul>\n\n<p><em>Return Dataset</em> : self or new Dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.updateindex", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.updateindex", "kind": "function", "doc": "<p>update values of an index.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listvalue</strong> : list - index values to replace</li>\n<li><strong>index</strong> : integer - index row to update</li>\n<li><strong>extern</strong> : if True, the listvalue has external representation, else internal</li>\n</ul>\n\n<p><em>Returns</em> : none</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listvalue</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.dataset_structure.DatasetStructure.valtokey", "modulename": "tab-dataset.tab_dataset.dataset_structure", "qualname": "DatasetStructure.valtokey", "kind": "function", "doc": "<p>convert a record list (value or val for each idx) to a key list \n(key for each index).</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>rec</strong> : list of value or val for each index</li>\n<li><strong>extern</strong> : if True, the rec value has external representation, else internal</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list of int</strong> : record key for each index</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rec</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field", "modulename": "tab-dataset.tab_dataset.field", "kind": "module", "doc": "<p>Created on Thu May 26 20:30:00 2022</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>The <code>python.observation.field</code> module contains the <code>Field</code> class.</p>\n\n<p>Documentation is available in other pages :</p>\n\n<ul>\n<li>The Json Standard for Field is defined <a href=\"https://github.com/loco-philippe/\nEnvironmental-Sensing/tree/main/documentation/IlistJSON-Standard.pdf\">here</a></li>\n<li>The concept of 'indexed list' is described in\n<a href=\"https://github.com/loco-philippe/Environmental-Sensing/wiki/Indexed-list\">this page</a>.</li>\n<li>The non-regression tests are at <a href=\"https://github.com/loco-philippe/\nEnvironmental-Sensing/blob/main/python/Tests/test_iindex.py\">this page</a></li>\n<li>The <a href=\"https://github.com/loco-philippe/Environmental-Sensing/tree/main/\npython/Examples/Field\">examples</a> are :\n<ul>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/\npython/Examples/Field/Field_creation.ipynb\">creation</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/\npython/Examples/Field/Field_value.ipynb\">value</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/\npython/Examples/Field/Field_update.ipynb\">update</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/blob/main/\npython/Examples/Field/Field_structure.ipynb\">structure</a></li>\n<li><a href=\"https://github.com/loco-philippe/Environmental-Sensing/\nblob/main/python/Examples/Field/Field_structure-analysis.ipynb\">structure-analysis</a></li>\n</ul></li>\n</ul>\n\n<hr />\n"}, {"fullname": "tab-dataset.tab_dataset.field.Field", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field", "kind": "class", "doc": "<p>An <code>Field</code> is a representation of an index list .</p>\n\n<p><em>Attributes (for dynamic attributes see @property methods)</em> :</p>\n\n<ul>\n<li><strong>name</strong> : name of the Field</li>\n<li><strong>codec</strong> : list of values for each key</li>\n<li><strong>keys</strong> : list of code values</li>\n</ul>\n\n<p>The methods defined in this class are :</p>\n\n<p><em>constructor (@classmethod)</em></p>\n\n<ul>\n<li><code>Field.bol</code></li>\n<li><code>Field.ntv</code></li>\n<li><code>Field.like</code></li>\n<li><code>Field.ntv_to_val</code></li>\n<li><code>Field.merging</code></li>\n</ul>\n\n<p><em>conversion abstract static methods (@abstractmethod, @staticmethod)</em></p>\n\n<ul>\n<li><code>Field.l_to_i</code></li>\n<li><code>Field.s_to_i</code></li>\n<li><code>Field.l_to_e</code></li>\n<li><code>Field.s_to_e</code></li>\n<li><code>Field.i_to_n</code></li>\n<li><code>Field.n_to_i</code></li>\n<li><code>Field.i_to_name</code></li>\n</ul>\n\n<p><em>dynamic value (getters @property)</em></p>\n\n<ul>\n<li><code>Field.values</code></li>\n<li><code>Field.val</code></li>\n<li><code>Field.cod</code></li>\n<li><code>Field.codec</code></li>\n<li><code>Field.infos</code></li>\n<li><code>Field.keys</code></li>\n</ul>\n\n<p><em>add - update methods (<code>observation.field_structure.FieldStructure</code>)</em></p>\n\n<ul>\n<li><code>Field.append</code></li>\n<li><code>Field.setcodecvalue</code></li>\n<li><code>Field.setcodeclist</code></li>\n<li><code>Field.setname</code></li>\n<li><code>Field.setkeys</code></li>\n<li><code>Field.setlistvalue</code></li>\n<li><code>Field.setvalue</code></li>\n</ul>\n\n<p><em>transform methods (<code>observation.field_structure.FieldStructure</code>)</em></p>\n\n<ul>\n<li><code>Field.coupling</code></li>\n<li><code>Field.extendkeys</code></li>\n<li><code>Field.full</code></li>\n<li><code>Field.reindex</code></li>\n<li><code>Field.reorder</code></li>\n<li><code>Field.sort</code></li>\n<li><code>Field.tocoupled</code></li>\n<li><code>Field.tostdcodec</code></li>\n</ul>\n\n<p><em>getters methods (<code>observation.field_structure.FieldStructure</code>)</em></p>\n\n<ul>\n<li><code>Field.couplinginfos</code></li>\n<li><code>Field.derkeys</code></li>\n<li><code>Field.getduplicates</code></li>\n<li><code>Field.iscrossed</code></li>\n<li><code>Field.iscoupled</code></li>\n<li><code>Field.isderived</code></li>\n<li><code>Field.islinked</code></li>\n<li><code>Field.isvalue</code></li>\n<li><code>Field.iskeysfromderkeys</code></li>\n<li><code>Field.keytoval</code></li>\n<li><code>Field.loc</code></li>\n<li><code>Field.recordfromkeys</code></li>\n<li><code>Field.recordfromvalue</code></li>\n<li><code>Field.valtokey</code></li>\n</ul>\n\n<p><em>export methods (<code>observation.field_interface.FieldInterface</code>)</em></p>\n\n<ul>\n<li><code>Field.json</code></li>\n<li><code>Field.to_obj</code></li>\n<li><code>Field.to_dict_obj</code></li>\n<li><code>Field.to_numpy</code></li>\n<li><code>Field.to_pandas</code></li>\n<li><code>Field.vlist</code></li>\n<li><code>Field.vName</code></li>\n<li><code>Field.vSimple</code></li>\n</ul>\n", "bases": "tab_dataset.field_interface.FieldInterface, abc.ABC, tab_dataset.cfield.Cfield"}, {"fullname": "tab-dataset.tab_dataset.field.Field.__init__", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.__init__", "kind": "function", "doc": "<p>Field constructor.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>codec</strong> :  list (default None) - external different values of index (see data model)</li>\n<li><strong>keys</strong> :  list (default None)  - key value of index (see data model)</li>\n<li><strong>name</strong> : string (default None) - name of index (see data model)</li>\n<li><strong>lendefault</strong> : integer (default 0) - default len if no keys is defined</li>\n<li><strong>reindex</strong> : boolean (default True) - if True, default codec is apply</li>\n<li><strong>fast</strong>: boolean (default False) - if True, codec is created without conversion</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">codec</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lendefault</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">reindex</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "tab-dataset.tab_dataset.field.Field.merging", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.merging", "kind": "function", "doc": "<p>Create a new Field with values are tuples of listidx Field values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listidx</strong> : list of Field to be merged.</li>\n<li><strong>name</strong> : string (default : None) - Name of the new Field</li>\n</ul>\n\n<p><em>Returns</em> : new Field</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">listidx</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.l_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.l_to_i", "kind": "function", "doc": "<p>converting a list of external values to a list of internal values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.s_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.s_to_i", "kind": "function", "doc": "<p>converting an external value to an internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.n_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.n_to_i", "kind": "function", "doc": "<p>converting a NTV value to an internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ntv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.l_to_e", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.l_to_e", "kind": "function", "doc": "<p>converting a list of internal values to a list of external values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.s_to_e", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.s_to_e", "kind": "function", "doc": "<p>converting an internal value to an external value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.i_to_n", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.i_to_n", "kind": "function", "doc": "<p>converting an internal value to a NTV value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.i_to_name", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.i_to_name", "kind": "function", "doc": "<p>return the name of the internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.cod", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.cod", "kind": "variable", "doc": "<p>return codec conversion to json value</p>\n"}, {"fullname": "tab-dataset.tab_dataset.field.Field.val", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.val", "kind": "variable", "doc": "<p>return values conversion to string</p>\n"}, {"fullname": "tab-dataset.tab_dataset.field.Field.append", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.append", "kind": "function", "doc": "<p>add a new value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : new object value</li>\n<li><strong>unique</strong> :  boolean (default True) - If False, duplication codec if value is present</li>\n</ul>\n\n<p><em>Returns</em> : key of value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.isvalue", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.isvalue", "kind": "function", "doc": "<p>return True if value is in index values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to check</li>\n<li><strong>extern</strong> : if True, compare value to external representation of self.value,\nelse, internal</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.keytoval", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.keytoval", "kind": "function", "doc": "<p>return the value of a key</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>key</strong> : key to convert into values</li>\n<li><strong>extern</strong> : if True, return string representation else, internal value</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>int</strong> : first key finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.loc", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.loc", "kind": "function", "doc": "<p>return a list of record number with value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to check</li>\n<li><strong>extern</strong> : if True, compare value to external representation of self.value,\nelse, internal</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list of int</strong> : list of record number finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.recordfromvalue", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.recordfromvalue", "kind": "function", "doc": "<p>return a list of record number with value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to check</li>\n<li><strong>extern</strong> : if True, compare value to external representation of self.value,\nelse, internal</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>list of int</strong> : list of record number finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.setcodecvalue", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.setcodecvalue", "kind": "function", "doc": "<p>update all the oldvalue by newvalue</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>oldvalue</strong> : list of values to replace</li>\n<li><strong>newvalue</strong> : list of new value to apply</li>\n<li><strong>extern</strong> : if True, the newvalue has external representation, else internal</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : int - last codec rank updated (-1 if None)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">oldvalue</span>,</span><span class=\"param\">\t<span class=\"n\">newvalue</span>,</span><span class=\"param\">\t<span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.setcodeclist", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.setcodeclist", "kind": "function", "doc": "<p>update codec with listcodec values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listcodec</strong> : list of new codec values to apply</li>\n<li><strong>extern</strong> : if True, the newvalue has external representation, else internal</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : int - last codec rank updated (-1 if None)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listcodec</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.setvalue", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.setvalue", "kind": "function", "doc": "<p>update a value at the rank ind (and update codec and keys)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>ind</strong> : rank of the value</li>\n<li><strong>value</strong> : new value</li>\n<li><strong>extern</strong> : if True, the value has external representation, else internal</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ind</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.setlistvalue", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.setlistvalue", "kind": "function", "doc": "<p>update the values (and update codec and keys)</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>listvalue</strong> : list - list of new values</li>\n<li><strong>extern</strong> : if True, the value has external representation, else internal</li>\n<li><strong>nameonly</strong> : if True, only the name of ESValue is changed</li>\n<li><strong>valueonly</strong> : if True, only the value of ESValue is changed</li>\n</ul>\n\n<p><em>Returns</em> : None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">listvalue</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">nameonly</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">valueonly</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Field.valtokey", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Field.valtokey", "kind": "function", "doc": "<p>convert a value to a key</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>value</strong> : value to convert</li>\n<li><strong>extern</strong> : if True, the value has external representation, else internal</li>\n</ul>\n\n<p><em>Returns</em></p>\n\n<ul>\n<li><strong>int</strong> : first key finded (None else)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield", "kind": "class", "doc": "<p>Nfield is a child class of NtvField where values are NTV objects</p>\n\n<p>The methods defined in this class are conversion methods:</p>\n\n<p><em>converting external value to internal value:</em></p>\n\n<ul>\n<li><code>Nfield.l_to_i</code></li>\n<li><code>Nfield.s_to_i</code></li>\n</ul>\n\n<p><em>converting internal value to external value:</em></p>\n\n<ul>\n<li><code>Nfield.l_to_e</code></li>\n<li><code>Nfield.s_to_e</code></li>\n</ul>\n\n<p><em>converting internal value / NTV value:</em></p>\n\n<ul>\n<li><code>Nfield.i_to_n</code></li>\n<li><code>Nfield.n_to_i</code></li>\n</ul>\n\n<p><em>extract the name of the value:</em></p>\n\n<ul>\n<li><code>Nfield.i_to_name</code></li>\n</ul>\n", "bases": "Field"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.l_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.l_to_i", "kind": "function", "doc": "<p>converting a list of external values to a list of internal values</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>fast</strong>: boolean (default False) - list is created with a list of json values \nwithout control</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.s_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.s_to_i", "kind": "function", "doc": "<p>converting an external value to an internal value</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>fast</strong>: boolean (default False) - list is created with a list of json values \nwithout control</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.n_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.n_to_i", "kind": "function", "doc": "<p>converting a NTV value to an internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ntv</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.l_to_e", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.l_to_e", "kind": "function", "doc": "<p>converting a list of internal values to a list of external values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.s_to_e", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.s_to_e", "kind": "function", "doc": "<p>converting an internal value to an external value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.i_to_n", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.i_to_n", "kind": "function", "doc": "<p>converting an internal value to a NTV value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Nfield.i_to_name", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Nfield.i_to_name", "kind": "function", "doc": "<p>return the name of the internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield", "kind": "class", "doc": "<p>Sfield is a child class of NtvField where inner and outer values are same</p>\n\n<p>The methods defined in this class are conversion methods:</p>\n\n<p><em>converting external value to internal value:</em></p>\n\n<ul>\n<li><code>Nfield.l_to_i</code></li>\n<li><code>Nfield.s_to_i</code></li>\n</ul>\n\n<p><em>converting internal value to external value:</em></p>\n\n<ul>\n<li><code>Nfield.l_to_e</code></li>\n<li><code>Nfield.s_to_e</code></li>\n</ul>\n\n<p><em>converting internal value / NTV value:</em></p>\n\n<ul>\n<li><code>Nfield.i_to_n</code></li>\n<li><code>Nfield.n_to_i</code></li>\n</ul>\n\n<p><em>extract the name of the value:</em></p>\n\n<ul>\n<li><code>Nfield.i_to_name</code></li>\n</ul>\n", "bases": "Field"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.l_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.l_to_i", "kind": "function", "doc": "<p>converting a list of external values to a list of internal values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.s_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.s_to_i", "kind": "function", "doc": "<p>converting an external value to an internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.n_to_i", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.n_to_i", "kind": "function", "doc": "<p>converting a NtvList value to an internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ntv_lis</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.l_to_e", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.l_to_e", "kind": "function", "doc": "<p>converting a list of internal values to a list of external values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lis</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.s_to_e", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.s_to_e", "kind": "function", "doc": "<p>converting an internal value to an external value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span>, </span><span class=\"param\"><span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.i_to_n", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.i_to_n", "kind": "function", "doc": "<p>converting an internal value to a NTV value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field.Sfield.i_to_name", "modulename": "tab-dataset.tab_dataset.field", "qualname": "Sfield.i_to_name", "kind": "function", "doc": "<p>return the name of the internal value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface", "modulename": "tab-dataset.tab_dataset.field_interface", "kind": "module", "doc": "<p>Created on Sun Oct  2 22:24:59 2022</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>The <code>python.observation.field_interface</code> module contains the <code>FieldInterface</code> class\n(<code>python.observation.field.Field</code> methods).</p>\n"}, {"fullname": "tab-dataset.tab_dataset.field_interface.CborDecoder", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "CborDecoder", "kind": "class", "doc": "<p>Cbor extension for integer keys (codification keys)</p>\n", "bases": "json.decoder.JSONDecoder"}, {"fullname": "tab-dataset.tab_dataset.field_interface.CborDecoder.__init__", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "CborDecoder.__init__", "kind": "function", "doc": "<p><code>object_hook</code>, if specified, will be called with the result\nof every JSON object decoded and its return value will be used in\nplace of the given <code>dict</code>.  This can be used to provide custom\ndeserializations (e.g. to support JSON-RPC class hinting).</p>\n\n<p><code>object_pairs_hook</code>, if specified will be called with the result of\nevery JSON object decoded with an ordered list of pairs.  The return\nvalue of <code>object_pairs_hook</code> will be used instead of the <code>dict</code>.\nThis feature can be used to implement custom decoders.\nIf <code>object_hook</code> is also defined, the <code>object_pairs_hook</code> takes\npriority.</p>\n\n<p><code>parse_float</code>, if specified, will be called with the string\nof every JSON float to be decoded. By default this is equivalent to\nfloat(num_str). This can be used to use another datatype or parser\nfor JSON floats (e.g. decimal.Decimal).</p>\n\n<p><code>parse_int</code>, if specified, will be called with the string\nof every JSON int to be decoded. By default this is equivalent to\nint(num_str). This can be used to use another datatype or parser\nfor JSON integers (e.g. float).</p>\n\n<p><code>parse_constant</code>, if specified, will be called with one of the\nfollowing strings: -Infinity, Infinity, NaN.\nThis can be used to raise an exception if invalid JSON numbers\nare encountered.</p>\n\n<p>If <code>strict</code> is false (true is the default), then control\ncharacters will be allowed inside strings.  Control characters in\nthis context are those with character codes in the 0-31 range,\nincluding <code>'\\t'</code> (tab), <code>'\\n'</code>, <code>'\\r'</code> and <code>'\\0'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "tab-dataset.tab_dataset.field_interface.CborDecoder.codecbor", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "CborDecoder.codecbor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dic</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldEncoder", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldEncoder", "kind": "class", "doc": "<p>new json encoder for Field and Dataset</p>\n", "bases": "json.encoder.JSONEncoder"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldEncoder.default", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldEncoder.default", "kind": "function", "doc": "<p>Implement this method in a subclass such that it returns\na serializable object for <code>o</code>, or calls the base implementation\n(to raise a <code>TypeError</code>).</p>\n\n<p>For example, to support arbitrary iterators, you could\nimplement default like this::</p>\n\n<pre><code>def default(self, o):\n    try:\n        iterable = iter(o)\n    except TypeError:\n        pass\n    else:\n        return list(iterable)\n    # Let the base class default method raise the TypeError\n    return JSONEncoder.default(self, o)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">o</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldInterface", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldInterface", "kind": "class", "doc": "<p>this class includes Field methods :</p>\n\n<ul>\n<li><code>FieldInterface.json</code></li>\n<li><code>FieldInterface.to_obj</code></li>\n<li><code>FieldInterface.to_dict_obj</code></li>\n<li><code>FieldInterface.to_numpy</code></li>\n<li><code>FieldInterface.to_pandas</code></li>\n<li><code>FieldInterface.vlist</code></li>\n<li><code>FieldInterface.vName</code></li>\n<li><code>FieldInterface.vSimple</code></li>\n</ul>\n"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldInterface.to_numpy", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldInterface.to_numpy", "kind": "function", "doc": "<p>Transform Field in a Numpy array.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>func</strong> : function (default None) - function to apply for each value of the Field.\nIf func is the 'index' string, values are replaced by raw values.</li>\n<li><strong>npdtype</strong> : string (default None) - numpy dtype for the Array ('object' if None)</li>\n<li><strong>kwargs</strong> : parameters to apply to the func function</li>\n</ul>\n\n<p><em>Returns</em> : Numpy Array</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">codec</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">npdtype</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldInterface.to_ntv", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldInterface.to_ntv", "kind": "function", "doc": "<p>Return a Ntv field value</p>\n\n<p><em>Parameters (kwargs)</em></p>\n\n<ul>\n<li><strong>modecodec</strong> : string (default 'optimize') - if 'full', index is with a full codec\nif 'default' index has keys, if 'optimize' keys are optimized, </li>\n<li><strong>codecval</strong> : boolean (default False) - if True, only list of codec values is included</li>\n<li><strong>def_type</strong> : string (default 'json') - default ntv_type for NtvList or NtvSet</li>\n<li><strong>name</strong> : boolean (default True) - if False, index name are not included</li>\n<li><strong>keys</strong> : list (default None) - used only with 'optimize' mode</li>\n<li><strong>parent</strong> : int or str (default None) - used only with 'optimize' mode</li>\n</ul>\n\n<p><em>Returns</em> : Ntv object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">modecodec</span><span class=\"o\">=</span><span class=\"s1\">&#39;optimize&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">codecval</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">def_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">coef</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldInterface.to_pandas", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldInterface.to_pandas", "kind": "function", "doc": "<p>Transform Field in a Pandas Series, Pandas DataFrame or Numpy array.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>func</strong> : function (default None) - function to apply for each value of the Field.\nIf func is the 'index' string, values are replaced by raw values.</li>\n<li><strong>npdtype</strong> : string (default None) - numpy dtype for the Array ('object' if None)</li>\n<li><strong>series</strong> : boolean (default True) - if True, return a Series. \nIf False return a DataFrame</li>\n<li><strong>index</strong> : boolean (default True) - if True, index is keys.</li>\n<li><strong>numpy</strong> : boolean (default False) - if True, return a Numpy array.</li>\n<li><strong>kwargs</strong> : parameters to apply to the func function</li>\n</ul>\n\n<p><em>Returns</em> : Pandas Series, Pandas DataFrame, Numpy Array</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">func</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">codec</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">npdtype</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">series</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">numpy</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldInterface.vlist", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldInterface.vlist", "kind": "function", "doc": "<p>Apply a function to values and return the result.</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>func</strong> : function - function to apply to values</li>\n<li><strong>args, kwargs</strong> : parameters for the function</li>\n<li><strong>extern</strong> : if True, the function is apply to external values, else internal</li>\n</ul>\n\n<p><em>Returns</em> : list of func result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">func</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">extern</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "tab-dataset.tab_dataset.field_interface.FieldInterface.vName", "modulename": "tab-dataset.tab_dataset.field_interface", "qualname": "FieldInterface.vName", "kind": "function", "doc": "<p>Return the list of name for ESValue data .</p>\n\n<p><em>Parameters</em></p>\n\n<ul>\n<li><strong>default</strong> : value return if no name is available</li>\n<li><strong>maxlen</strong> : integer (default None) - max length of name</li>\n</ul>\n\n<p><em>Returns</em> : list of name founded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();