window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "ES", "modulename": "ES", "qualname": "", "type": "module", "doc": "<h2 id=\"environnemantal-sensing-package\"><strong><em>Environnemantal Sensing Package</em></strong></h2>\n\n<p>Created on Fri Dec 24 15:21:14 2021</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<h1 id=\"why-a-project-for-environnemental-data\">Why a project for Environnemental Data ?</h1>\n\n<p>The project was born from the following observations:</p>\n\n<ul>\n<li>there is no standard format (apart from the Environmental Sensing Service Bluetooth) \nused by the sensors to transmit the information (binary and textual),</li>\n<li>there is no data exchange format presenting at the same time a temporal, \nspatial and physical component (apart from file formats),</li>\n<li>we spend a lot of energy converting this type of data to make it usable.</li>\n</ul>\n\n<h1 id=\"the-environnemental-sensing-project\">The Environnemental Sensing project</h1>\n\n<p>The ES project is made of :</p>\n\n<ul>\n<li>A data model that makes it possible to represent elementary observations \n(a simple one-off measurement), complex observations (multi-dimensions), \ndetailed levels of representation (for example, the evolution of a plume of smoke).</li>\n<li>Data formats adapted to interfaces (binary payload for networks, json for requests \nor for NoSQL API, files)</li>\n<li>A library of connectors for different uses (sensors, database, storage, networks, etc.) \nin diff\u00e9rents languages (python, C++)</li>\n<li>Bidirectional interfaces to data processing tools (eg Numpy, Xarray, GIS).</li>\n</ul>\n\n<p>It allows to :</p>\n\n<ul>\n<li>Facilitate the use and sharing of environmental data</li>\n<li>Standardize both data acquisition equipment (sensors) and processing applications,</li>\n<li>Implement a software architecture replacing all coding / decoding operations \n(interfaces) by the use of standard connectors,</li>\n<li>Respect and rely on the main existing standards</li>\n<li>Collectively share and develop a set of open-source connectors responding to \nall situations (platform)</li>\n</ul>\n\n<h1 id=\"main-principles\">Main principles</h1>\n\n<h2 id=\"standards\">Standards</h2>\n\n<p>The main standard about Environnemental Data is the ISO-19156 \"observation and \nmeasurement\" standard :    </p>\n\n<p><em>\"This International Standard defines a conceptual schema for observations, and \nfor features involved in sampling when making observations. These provide models \nfor the exchange of information describing observation acts and their results, \nboth within and between different scientific and technical communities.\"</em> </p>\n\n<p>But this standard specifies that: </p>\n\n<p><em>\"ISO 19156 concerns only concerns only interfaces visible from the outside and\n does not impose any restrictions on the underlying implementations\"</em></p>\n\n<p>The other standards concern more restricted areas and are sometimes incompatible. \nThey often remain at a syntactic and non-semantic level.\nThe proposed data structure is based on existing standards that it complements \nby ensuring convergence:    </p>\n\n<p><img src=\"./ES/standard.png\" width=\"800\"></p>\n\n<h2 id=\"data-structure\">Data structure</h2>\n\n<p>An Observation is characterized by:</p>\n\n<ul>\n<li>\"observed property\": the observed property,</li>\n<li>\"feature of interest\": the object (most often a location) of the observation,</li>\n<li>\"procedure\": the information acquisition mode (sensor, model, etc.)</li>\n<li>\"result\": result of the observation or the measurement</li>\n</ul>\n\n<p>The result is a set of values or objects \u200b\u200breferenced according to the 3 dimensions:</p>\n\n<ul>\n<li>temporal,</li>\n<li>spatial,</li>\n<li>physical (observed property)</li>\n</ul>\n\n<p>It can be converted into a 3-dimensional matrix, each result being indexed by \ntemporal, spatial and physical values.</p>\n\n<p><img src=\"./ES/structure.png\" width=\"800\"></p>\n\n<p>Common properties (indicators) are associated \nwith each Observation. They allow processing to be performed on Observations \nwithout having to know their composition (eg bounding boxes, type of observation,\nvolume, etc.).   </p>\n\n<p><em>Note: This \u201cdomain range\u201d indexed representation is preferred to an \u201cinterleaved\u201d\ntabular representation which associates temporal, spatial and physical values <br />\n\u200b\u200bwith each value of the result.</em></p>\n\n<h2 id=\"index\">Index</h2>\n\n<h2 id=\"dimension\">Dimension</h2>\n\n<h2 id=\"json-interface\">Json interface</h2>\n\n<h2 id=\"binary-interface\">Binary interface</h2>\n\n<h2 id=\"bluetooth-mapping\">Bluetooth mapping</h2>\n\n<h2 id=\"xarray-mapping\">Xarray mapping</h2>\n\n<h1 id=\"quick-overview\">Quick overview</h1>\n\n<h2 id=\"create-an-observation\">Create an Observation</h2>\n\n<pre><code>In [173]: ob=Observation()\n\nIn [174]: ob\nOut[174]: \n&lt;ESObservation.Observation object at 0x0000024B1D8B73A0&gt;\nmetatype, classES, typeES : ESObject observation observation \ntype : obserror \nreference : 0 \nResultTime : null \nid : null \n\nIn [175]: ob.append('ce matin', 'paris', 'pm10', 'fort')\n\nIn [176]: ob.append('ce matin', 'lyon', 'pm25', 'faible')\n\nIn [177]: ob.append('ce midi', 'marseille', 'pm1', 'tres fort')\n</code></pre>\n\n<h3 id=\"measuring-station\">Measuring station</h3>\n\n<h3 id=\"mobile-sensor\">Mobile sensor</h3>\n\n<h3 id=\"simulation\">Simulation</h3>\n\n<h3 id=\"access-information\">Access information</h3>\n\n<h3 id=\"visualize-an-observation\">Visualize an Observation</h3>\n\n<h2 id=\"generate-an-exchange-format\">Generate an Exchange format</h2>\n\n<h3 id=\"binary-format\">Binary format</h3>\n\n<h3 id=\"json-format\">Json format</h3>\n\n<h3 id=\"no-sql-format\">No SQL format</h3>\n\n<h2 id=\"managing-observations\">Managing Observations</h2>\n\n<h3 id=\"sort\">Sort</h3>\n\n<h3 id=\"aggregation\">Aggregation</h3>\n\n<h3 id=\"numpy-export\">Numpy export</h3>\n\n<h3 id=\"xarray-export\">Xarray export</h3>\n\n<h1 id=\"developpers-documentation\">Developpers documentation</h1>\n\n<h2 id=\"data-model\">Data model</h2>\n\n<p>An <code>ESObservation.Observation</code> is an object representing a set of information having\nspatial and temporal characteristics associated with measurable or observable\n properties.\n<img src=\"./ES/ESclasses.png\" width=\"800\"></p>\n\n<h2 id=\"what-are-the-es-classes\">What are the ES classes ?</h2>\n\n<p>The ES functions are divided according to the class hierarchy below :</p>\n\n<p><img src=\"./ES/EShierarchie.png\" width=\"800\"></p>\n\n<p>Modules contain the following classes :</p>\n\n<ul>\n<li>ESObservation : <code>ES.ESObservation.Observation</code>, </li>\n<li>ESValue : <code>ES.ESValue.DatationValue</code>, <code>ES.ESValue.LocationValue</code>, \n<code>ES.ESValue.PropertyValue</code>, <code>ES.ESValue.ResultValue</code>, <code>ES.ESValue.ESValue</code>, \n<code>ES.ESValue.ESIndexValue</code>, <code>ES.ESValue.ESSet</code></li>\n<li>ESElement : <code>ES.ESElement.ESElement</code>, <code>ES.ESElement.ESObs</code>, <code>ES.ESElement.ESObject</code>.</li>\n<li>ESObs : <code>ES.ESObs.Location</code>, <code>ES.ESObs.Datation</code>, <code>ES.ESObs.Property</code>,\n<code>ES.ESObs.Result</code>, <code>ES.ESObs.ESSetLocation</code>, <code>ES.ESObs.ESSetDatation</code>,\n<code>ES.ESObs.ESSetProperty</code>, <code>ES.ESObs.ESSetResult</code>, </li>\n<li>ESconstante : <code>ES.ESconstante.Es</code>.</li>\n</ul>\n"}, {"fullname": "ES.ESElement", "modulename": "ES.ESElement", "qualname": "", "type": "module", "doc": "<p>Created on Sun Aug  1 13:24:02 2021</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>This module contains the parent classes of the classes of the <code>ES.ESObs</code> and\n<code>ES.ESObservation</code> modules.</p>\n"}, {"fullname": "ES.ESElement.isESObs", "modulename": "ES.ESElement", "qualname": "isESObs", "type": "function", "doc": "<p></p>\n", "parameters": ["esClass", "jObj"], "funcdef": "def"}, {"fullname": "ES.ESElement.isESAtt", "modulename": "ES.ESElement", "qualname": "isESAtt", "type": "function", "doc": "<p></p>\n", "parameters": ["esClass", "key"], "funcdef": "def"}, {"fullname": "ES.ESElement.isUserAtt", "modulename": "ES.ESElement", "qualname": "isUserAtt", "type": "function", "doc": "<p></p>\n", "parameters": ["key"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESElement", "modulename": "ES.ESElement", "qualname": "ESElement", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESElement.ESElement.__init__", "modulename": "ES.ESElement", "qualname": "ESElement.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESElement.setAtt", "modulename": "ES.ESElement", "qualname": "ESElement.setAtt", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "key", "value"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESElement.getAttAll", "modulename": "ES.ESElement", "qualname": "ESElement.getAttAll", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "key"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESElement.addComposant", "modulename": "ES.ESElement", "qualname": "ESElement.addComposant", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pCompos"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESElement.element", "modulename": "ES.ESElement", "qualname": "ESElement.element", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "comp"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESElement.majMeta", "modulename": "ES.ESElement", "qualname": "ESElement.majMeta", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESObject", "modulename": "ES.ESElement", "qualname": "ESObject", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESElement.ESObject.__init__", "modulename": "ES.ESElement", "qualname": "ESObject.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESObs", "modulename": "ES.ESElement", "qualname": "ESObs", "type": "class", "doc": "<p>Classe m\u00e8re des objets Datation, Location et Property.</p>\n"}, {"fullname": "ES.ESElement.ESObs.__init__", "modulename": "ES.ESElement", "qualname": "ESObs.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESElement.ESObs.observation", "modulename": "ES.ESElement", "qualname": "ESObs.observation", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs", "modulename": "ES.ESObs", "qualname": "", "type": "module", "doc": "<p>Created on Tue Aug  3 23:40:06 2021</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>An object of the <code>ES.ESObs</code> module is a component of an <code>ES.ESObservation.Observation</code> object</p>\n"}, {"fullname": "ES.ESObs.Datation", "modulename": "ES.ESObs", "qualname": "Datation", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.Datation.__init__", "modulename": "ES.ESObs", "qualname": "Datation.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.Location", "modulename": "ES.ESObs", "qualname": "Location", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.Location.__init__", "modulename": "ES.ESObs", "qualname": "Location.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.Property", "modulename": "ES.ESObs", "qualname": "Property", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.Property.__init__", "modulename": "ES.ESObs", "qualname": "Property.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.Result", "modulename": "ES.ESObs", "qualname": "Result", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.Result.__init__", "modulename": "ES.ESObs", "qualname": "Result.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetDatation", "modulename": "ES.ESObs", "qualname": "ESSetDatation", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.ESSetDatation.__init__", "modulename": "ES.ESObs", "qualname": "ESSetDatation.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "jObj", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetDatation.vListSlot", "modulename": "ES.ESObs", "qualname": "ESSetDatation.vListSlot", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetDatation.vListInstant", "modulename": "ES.ESObs", "qualname": "ESSetDatation.vListInstant", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetDatation.json", "modulename": "ES.ESObs", "qualname": "ESSetDatation.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetDatation.to_numpy", "modulename": "ES.ESObs", "qualname": "ESSetDatation.to_numpy", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "func"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetDatation.analyse", "modulename": "ES.ESObs", "qualname": "ESSetDatation.analyse", "type": "function", "doc": "<p>calcul de bbox</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetLocation", "modulename": "ES.ESObs", "qualname": "ESSetLocation", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.ESSetLocation.__init__", "modulename": "ES.ESObs", "qualname": "ESSetLocation.__init__", "type": "function", "doc": "<p>if type(jObj) == ESSetLocation : \nself = jObj\nLocation.__init__(self, pObs)\nreturn</p>\n", "parameters": ["self", "jObj", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetLocation.json", "modulename": "ES.ESObs", "qualname": "ESSetLocation.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetLocation.vListPoint", "modulename": "ES.ESObs", "qualname": "ESSetLocation.vListPoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetLocation.vListCodePlus", "modulename": "ES.ESObs", "qualname": "ESSetLocation.vListCodePlus", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetLocation.vListShap", "modulename": "ES.ESObs", "qualname": "ESSetLocation.vListShap", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetLocation.to_numpy", "modulename": "ES.ESObs", "qualname": "ESSetLocation.to_numpy", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "func"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetLocation.analyse", "modulename": "ES.ESObs", "qualname": "ESSetLocation.analyse", "type": "function", "doc": "<p>calcul de bbox</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetProperty", "modulename": "ES.ESObs", "qualname": "ESSetProperty", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.ESSetProperty.__init__", "modulename": "ES.ESObs", "qualname": "ESSetProperty.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "jObj", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetProperty.vListType", "modulename": "ES.ESObs", "qualname": "ESSetProperty.vListType", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetProperty.json", "modulename": "ES.ESObs", "qualname": "ESSetProperty.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetProperty.to_numpy", "modulename": "ES.ESObs", "qualname": "ESSetProperty.to_numpy", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "func"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult", "modulename": "ES.ESObs", "qualname": "ESSetResult", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESObs.ESSetResult.__init__", "modulename": "ES.ESObs", "qualname": "ESSetResult.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "jObj", "pObs"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.vListIndex", "modulename": "ES.ESObs", "qualname": "ESSetResult.vListIndex", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESObs.ESSetResult.full", "modulename": "ES.ESObs", "qualname": "ESSetResult.full", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "maj"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.to_numpy", "modulename": "ES.ESObs", "qualname": "ESSetResult.to_numpy", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "func", "ind", "squeeze"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.json", "modulename": "ES.ESObs", "qualname": "ESSetResult.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.getMaxIndex", "modulename": "ES.ESObs", "qualname": "ESSetResult.getMaxIndex", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.isIndex", "modulename": "ES.ESObs", "qualname": "ESSetResult.isIndex", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.resetIndexRes", "modulename": "ES.ESObs", "qualname": "ESSetResult.resetIndexRes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.majIndex", "modulename": "ES.ESObs", "qualname": "ESSetResult.majIndex", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "nRes", "nPrp", "nDat", "nLoc", "order"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.triAxe", "modulename": "ES.ESObs", "qualname": "ESSetResult.triAxe", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "maj", "fullAxes"], "funcdef": "def"}, {"fullname": "ES.ESObs.ESSetResult.analyse", "modulename": "ES.ESObs", "qualname": "ESSetResult.analyse", "type": "function", "doc": "<p>calcul de :\n    nd, nl, np : max des indices loc, dat, prop\n    dim : dimension 0, 1, 2, 3\n    error : indices incoh\u00e9rents\n    measure rate : taux de triplet (dat, loc, prop) document\u00e9</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObservation", "modulename": "ES.ESObservation", "qualname": "", "type": "module", "doc": "<p>Created on Tue Aug  3 23:40:06 2021</p>\n\n<p>@author: Philippe@loco-labs.io</p>\n\n<p>The <code>ES.ESObservation</code> module contains the main class\nof Environmental Sensing : <code>ES.ESObservation.Observation</code> class.</p>\n"}, {"fullname": "ES.ESObservation.EsObs", "modulename": "ES.ESObservation", "qualname": "EsObs", "type": "variable", "doc": "<p>ordered list for classES</p>\n"}, {"fullname": "ES.ESObservation.EsValue", "modulename": "ES.ESObservation", "qualname": "EsValue", "type": "variable", "doc": "<p>ordered list for ESValue</p>\n"}, {"fullname": "ES.ESObservation.EsObsDict", "modulename": "ES.ESObservation", "qualname": "EsObsDict", "type": "variable", "doc": "<p>dict classES : ESObs</p>\n"}, {"fullname": "ES.ESObservation.Observation", "modulename": "ES.ESObservation", "qualname": "Observation", "type": "class", "doc": "<p>An <code>ES.ESObservation.Observation</code> is made up of objects from the <code>ES.ESObs</code> class\n which each describe a dimension of this object.</p>\n\n<h2 id=\"attributes\">Attributes :</h2>\n\n<pre><code>- complet : consistency between Result and Datation, Location, Property\n- score : Observation structure codification\n- option : option \n- setLocation : shortcut to ESSetLocation (@property)\n- setDatation : shortcut to ESSetDatation (@property)\n- setProperty : shortcut to ESSetProperty (@property)\n- setResult   : shortcut to ESSetResult   (@property)\n- nValueObs   : lenght of ESObs\n- name : textual description (inherited from ESObject)\n- typeES : 'observation' (inherited from ESElement)\n- classES : 'observation' (inherited from ESElement)\n- metaType : 'ESObject' (inherited from ESElement)\n- mAtt : namedValue dictionnary (inherited from ESElement)\n- userAtt : namedValue dictionnary (inherited from ESElement)\n- pComposant : list of ESObs (inherited from ESElement)\n- pContenant : empty list (inherited from ESElement)\n- parameter : namedValue dictionnary (inherited from ESElement)\n</code></pre>\n"}, {"fullname": "ES.ESObservation.Observation.__init__", "modulename": "ES.ESObservation", "qualname": "Observation.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "args", "order", "kwargs"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.option", "modulename": "ES.ESObservation", "qualname": "Observation.option", "type": "variable", "doc": "<p>Dictionnary with options.</p>\n"}, {"fullname": "ES.ESObservation.Observation.score", "modulename": "ES.ESObservation", "qualname": "Observation.score", "type": "variable", "doc": "<p>Integer : Number of ESValue for each ESObs. For example, 122 means one PropertyValue (1), \nseveral LocationValue (2), several DatationValue (2).</p>\n"}, {"fullname": "ES.ESObservation.Observation.complet", "modulename": "ES.ESObservation", "qualname": "Observation.complet", "type": "variable", "doc": "<p>Boolean : True if the number of ResultValue is consistent with the number of \nLocationValue, DatationValue and PropertyValue.</p>\n"}, {"fullname": "ES.ESObservation.Observation.append", "modulename": "ES.ESObservation", "qualname": "Observation.append", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "arg"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addESObs", "modulename": "ES.ESObservation", "qualname": "Observation.addESObs", "type": "function", "doc": "<p>Add a new <code>ES.ESObs</code> attached to <code>ES.ESObservation.Observation</code>. \nThe ES.ESObs child class is defined by classES or if None by the js structure.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>js : ES.ESObs compatible type\nclassES : string, optional\n    value of the ES.ESObs ESclass attributes. The default is None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "parameters": ["self", "js", "classES"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addAttributes", "modulename": "ES.ESObservation", "qualname": "Observation.addAttributes", "type": "function", "doc": "<p>Add informations attached to <code>ES.ESObservation.Observation</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>js : Dictionnary\n    Keys are Observation keys or users keys.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "parameters": ["self", "js"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.bounds", "modulename": "ES.ESObservation", "qualname": "Observation.bounds", "type": "variable", "doc": "<p>tuple : Observation boundingBox (xmin, ymin, xmax, ymax).</p>\n"}, {"fullname": "ES.ESObservation.Observation.jsonFeature", "modulename": "ES.ESObservation", "qualname": "Observation.jsonFeature", "type": "variable", "doc": "<p>string : \"FeatureCollection\" with geometry in the Observation</p>\n"}, {"fullname": "ES.ESObservation.Observation.setLocation", "modulename": "ES.ESObservation", "qualname": "Observation.setLocation", "type": "variable", "doc": "<p>object <code>ES.ESObs.ESSetLocation</code> if exists, None otherwise.</p>\n"}, {"fullname": "ES.ESObservation.Observation.setDatation", "modulename": "ES.ESObservation", "qualname": "Observation.setDatation", "type": "variable", "doc": "<p>object <code>ES.ESObs.ESSetDatation</code> if exists, None otherwise.</p>\n"}, {"fullname": "ES.ESObservation.Observation.setProperty", "modulename": "ES.ESObservation", "qualname": "Observation.setProperty", "type": "variable", "doc": "<p>object <code>ES.ESObs.ESSetProperty</code> if exists, None otherwise.</p>\n"}, {"fullname": "ES.ESObservation.Observation.setResult", "modulename": "ES.ESObservation", "qualname": "Observation.setResult", "type": "variable", "doc": "<p>object <code>ES.ESObs.ESSetResult</code> if exists, None otherwise.</p>\n"}, {"fullname": "ES.ESObservation.Observation.extend", "modulename": "ES.ESObservation", "qualname": "Observation.extend", "type": "function", "doc": "<p>Copy <code>ES.ESObs</code> from obs to self (if it daesn't exist)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>obs : object ES.ESObservation.Observation to copy</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "parameters": ["self", "obs"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addResultValue", "modulename": "ES.ESObservation", "qualname": "Observation.addResultValue", "type": "function", "doc": "<p>Add a new <code>ES.ESValue.ResultValue</code> in the <code>ES.ESObs.ESSetResult</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>esValue : ES.ESValue.ResultValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Int : last index in the <code>ES.ESValue.ESSet</code> valueList.</p>\n", "parameters": ["self", "esValue"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addValue", "modulename": "ES.ESObservation", "qualname": "Observation.addValue", "type": "function", "doc": "<p>Add a new <code>ES.ESValue</code> in the <code>ES.ESValue.ESSet</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>esValue : ES.ESValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Int : last index in the <code>ES.ESValue.ESSet</code> valueList.</p>\n", "parameters": ["self", "esValue"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addListResultValue", "modulename": "ES.ESObservation", "qualname": "Observation.addListResultValue", "type": "function", "doc": "<p>Add a list of new <code>ES.ESValue.ResultValue</code> in the <code>ES.ESObs.ESSetResult</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>listEsValue : list of <code>ES.ESValue.ResultValue</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "parameters": ["self", "listEsValue"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.majList", "modulename": "ES.ESObservation", "qualname": "Observation.majList", "type": "function", "doc": "<p>Modify a list of one attribute (name or value) in an <code>ES.ESObs</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ValueClass : class ES.ESValue \nlistVal : list of values\nname : boolean (True for 'name' and False for 'value'), optional, \n    Attribute. The default is True. </p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "parameters": ["self", "ValueClass", "listVal", "name"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addListValue", "modulename": "ES.ESObservation", "qualname": "Observation.addListValue", "type": "function", "doc": "<p>Add a list of new <code>ES.ESValue</code> in a <code>ES.ESValue.ESSet</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ValueClass : name of the selected class ES.ESValue\nlistEsValue : list of ES.ESValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "parameters": ["self", "ValueClass", "listEsValue"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addValueObservation", "modulename": "ES.ESObservation", "qualname": "Observation.addValueObservation", "type": "function", "doc": "<p>Add a new <code>ES.ESValue.ResultValue</code> </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : ES.ESValue.ResultValue compatible type\nidat, iloc, iprp : integer, ES.ESValue.ESIndexValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Int : last index in the <code>ES.ESValue.ESSet</code> valueList.</p>\n", "parameters": ["self", "val", "idat", "iloc", "iprp"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addListValueObservation", "modulename": "ES.ESObservation", "qualname": "Observation.addListValueObservation", "type": "function", "doc": "<p>Add a list of new <code>ES.ESValue.ResultValue</code> </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>listVal : list of ES.ESValue.ResultValue compatible type\nlistIdat, listIloc, listIprp : list of integer in ES.ESValue.ESIndexValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "parameters": ["self", "listVal", "listIdat", "listIloc", "listIprp"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.addValueSensor", "modulename": "ES.ESObservation", "qualname": "Observation.addValueSensor", "type": "function", "doc": "<p>Add <code>ES.ESValue.ResultValue</code>,  <code>ES.ESValue.DatationValue</code>,  <code>ES.ESValue.LocationValue</code>\nfor a defined property.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>resVal : ES.ESValue.ResultValue compatible type, \ndatVal : ES.ESValue.DatationValue compatible type\nlocVal : ES.ESValue.LocationValue compatible type\nnprp : integer, index of the ES.ESValue.PropertyValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Int : last index in the <code>ES.ESValue.ESSet</code> valueList.</p>\n", "parameters": ["self", "resVal", "datVal", "locVal", "nprp"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.json", "modulename": "ES.ESObservation", "qualname": "Observation.json", "type": "function", "doc": "<p>Export in Json format. </p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>string : Json string</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.to_bytes", "modulename": "ES.ESObservation", "qualname": "Observation.to_bytes", "type": "function", "doc": "<p>Export in binary format. </p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bytes : binary representation of the ES.ESObservation.Observation</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.from_bytes", "modulename": "ES.ESObservation", "qualname": "Observation.from_bytes", "type": "function", "doc": "<p>Complete an empty <code>ES.ESObservation.Observation</code> with binary data. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>byt : binary representation of an ES.ESObservation.Observation</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "parameters": ["self", "byt"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.nValueObs", "modulename": "ES.ESObservation", "qualname": "Observation.nValueObs", "type": "variable", "doc": "<p>list : lenght of <code>ES.ESObs.ESSetProperty</code>, <code>ES.ESObs.ESSetDatation</code>, \n<code>ES.ESObs.ESSetLocation</code>, <code>ES.ESObs.ESSetResult</code>.</p>\n"}, {"fullname": "ES.ESObservation.Observation.iloc", "modulename": "ES.ESObservation", "qualname": "Observation.iloc", "type": "function", "doc": "<p>Return the <code>ES.ESValue</code> values for an <code>ES.ESValue.ESIndexValue</code>. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>idat, iloc, iprp : ES.ESValue.ESIndexValue</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dictionnary, ES.ESValue of each ES.ESObs</p>\n", "parameters": ["self", "idat", "iloc", "iprp"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.typeObs", "modulename": "ES.ESObservation", "qualname": "Observation.typeObs", "type": "variable", "doc": "<p>string : Observation type (calculated from ES.ESSetResult diam and ES.ESObservation.Observation score)</p>\n"}, {"fullname": "ES.ESObservation.Observation.full", "modulename": "ES.ESObservation", "qualname": "Observation.full", "type": "function", "doc": "<p>Add empty <code>ES.ESValue.ResultValue</code> to have a 'complete' <code>ES.ESObservation.Observation</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>maj : boolean, optional\n    If True, add value to Observation, else return valueList. The default is True.\nallAxes : boolean, optionnal \n    If True, axes are completed with empty ES.ESObs </p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>empty list if maj is True, else <code>ES.ESObs.ESSetResult</code> value.List</p>\n", "parameters": ["self", "maj", "allAxes"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.sort", "modulename": "ES.ESObservation", "qualname": "Observation.sort", "type": "function", "doc": "<p>Modify the order of <code>ES.ESValue</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>order : string, optional\n    Ordered list to follow (d:dat, l:loc, p:prp). The default is 'dlp'.\ncross : boolean, optional\n    If True, synchronize the order to have a less dimension. The default is True.\nsortRes : boolean, optional\n    If True, sort Result. The default is True.\nsort : list, optional\n    If empty, order is follow, if not sorting follows the list provided. The default is empty [[], [], []].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "parameters": ["self", "order", "cross", "sortRes", "sort"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.majType", "modulename": "ES.ESObservation", "qualname": "Observation.majType", "type": "function", "doc": "<p>Generate the <code>ES.ESObservation.Observation</code> and associates <code>ES.ESObs</code> \ncharacteristics (e.g. complet, score, dim...) and the index for <code>ES.ESValue.ResultValue</code> data.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>order : String, optional\n    Result ordering for result without index. The order is define with\n    three letters : l (location), d (datation), p (property). The default is 'dlp'.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "parameters": ["self", "order"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.to_xarray", "modulename": "ES.ESObservation", "qualname": "Observation.to_xarray", "type": "function", "doc": "<p>Convert <code>ES.ESObservation.Observation</code> to DataArray or DataSet with the smallest dimension. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataArray : Boolean, optional\n    DataArray ou DataSet. The default is True.\nsort : Boolean, optional\n    Sort along an axis. The default is True.\ncomplet : Boolean, optional\n    Generate all the DataArray.Coords or only one. The default is False.\nname : Boolean, optional\n    Add name Coords. The default is True.\ninfo : Boolean, optional\n    Generate a specific Coords with Observation characteristics. The default is False.\nnumeric : Boolean, optional\n    Generate a numeric DataArray.Values. The default is False.\nfullAxes : Boolean, optional\n    Include all the axes if True. The default is False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>xarray.DataArray or xarray.DataSet.</p>\n", "parameters": ["self", "dataArray", "sort", "complet", "name", "info", "numeric", "fullAxes", "func", "arrayname"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.voxel", "modulename": "ES.ESObservation", "qualname": "Observation.voxel", "type": "function", "doc": "<p>Visualize <code>ES.ESValue.ResultValue</code> in a cube with voxels.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>sort : Boolean, optional\n    Sort along axis. The default is False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "parameters": ["self", "sort"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.plot", "modulename": "ES.ESObservation", "qualname": "Observation.plot", "type": "function", "doc": "<p>This function visualize an <code>ES.ESObservation.Observation</code> with line or colormesh.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>switch : Boolean, optional\n    Switch between x and y axis. The default is switch=False.\nline : Boolean, optional\n    Choice line or colormesh. The default is line=True.\nsort : Boolean, optional\n    Sort along an axis or not. The default is sort=True.\nsize : Integer, optional\n    Size of the figure to plot. The default is size=5.\nmarker : Character, optional\n    Synbol for each point. The default is marker='o'.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None.</p>\n", "parameters": ["self", "switch", "line", "sort", "size", "marker"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.view", "modulename": "ES.ESObservation", "qualname": "Observation.view", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "dat", "loc", "prp", "lenres"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.to_csv", "modulename": "ES.ESObservation", "qualname": "Observation.to_csv", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "file", "name", "dat", "loc", "prp", "lenres"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.to_dataFrame", "modulename": "ES.ESObservation", "qualname": "Observation.to_dataFrame", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "dataArray", "sort", "complet", "name", "info", "numeric", "fullAxes", "func", "arrayname"], "funcdef": "def"}, {"fullname": "ES.ESObservation.Observation.choropleth", "modulename": "ES.ESObservation", "qualname": "Observation.choropleth", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name"], "funcdef": "def"}, {"fullname": "ES.ESSlot", "modulename": "ES.ESSlot", "qualname": "", "type": "module", "doc": "<p>Created on Sun Jan  2 18:30:14 2022</p>\n\n<p>@author: a179227</p>\n"}, {"fullname": "ES.ESSlot.TimeSlot", "modulename": "ES.ESSlot", "qualname": "TimeSlot", "type": "class", "doc": "<p></p>\n"}, {"fullname": "ES.ESSlot.TimeSlot.__init__", "modulename": "ES.ESSlot", "qualname": "TimeSlot.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESSlot.TimeSlot.json", "modulename": "ES.ESSlot", "qualname": "TimeSlot.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string"], "funcdef": "def"}, {"fullname": "ES.ESSlot.TimeSlot.bounds", "modulename": "ES.ESSlot", "qualname": "TimeSlot.bounds", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESSlot.TimeSlot.instant", "modulename": "ES.ESSlot", "qualname": "TimeSlot.instant", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESSlot.TimeSlot.interval", "modulename": "ES.ESSlot", "qualname": "TimeSlot.interval", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESSlot.TimeSlot.union", "modulename": "ES.ESSlot", "qualname": "TimeSlot.union", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "other"], "funcdef": "def"}, {"fullname": "ES.ESValue", "modulename": "ES.ESValue", "qualname": "", "type": "module", "doc": "<p>Created on Mon Aug  2 14:51:23 2021</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>This module groups together the classes of the objects used in the <code>ES.ESObs</code> module :</p>\n\n<ul>\n<li><code>ES.ESValue.DatationValue</code>,</li>\n<li><code>ES.ESValue.LocationValue</code>,</li>\n<li><code>ES.ESValue.PropertyValue</code>,</li>\n<li><code>ES.ESValue.ResultValue</code></li>\n</ul>\n\n<p>the parent classes :</p>\n\n<ul>\n<li><code>ES.ESValue.ESValue</code>, </li>\n<li><code>ES.ESValue.ESIndexValue</code>.</li>\n</ul>\n\n<p>and the <code>ES.ESValue.ESSet</code> class.</p>\n"}, {"fullname": "ES.ESValue.ESValue", "modulename": "ES.ESValue", "qualname": "ESValue", "type": "class", "doc": "<p>This class is the parent class for each kind of values \n (<code>ES.ESValue.DatationValue</code>, <code>ES.ESValue.LocationValue</code>, <code>ES.ESValue.PropertyValue</code>,\n  <code>ES.ESValue.ResultValue</code>)</p>\n"}, {"fullname": "ES.ESValue.ESValue.__init__", "modulename": "ES.ESValue", "qualname": "ESValue.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESValue.vName", "modulename": "ES.ESValue", "qualname": "ESValue.vName", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "genName"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESValue.majName", "modulename": "ES.ESValue", "qualname": "ESValue.majName", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "nam"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESValue.isEqual", "modulename": "ES.ESValue", "qualname": "ESValue.isEqual", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESValue.majValue", "modulename": "ES.ESValue", "qualname": "ESValue.majValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val", "simple"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESValue.to_strBytes", "modulename": "ES.ESValue", "qualname": "ESValue.to_strBytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "simple"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESValue.from_strBytes", "modulename": "ES.ESValue", "qualname": "ESValue.from_strBytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "byt", "simple"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESIndexValue", "modulename": "ES.ESValue", "qualname": "ESIndexValue", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESValue.ESIndexValue.__init__", "modulename": "ES.ESValue", "qualname": "ESIndexValue.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ind"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue", "modulename": "ES.ESValue", "qualname": "DatationValue", "type": "class", "doc": "<p>This class is the parent class for each kind of values \n (<code>ES.ESValue.DatationValue</code>, <code>ES.ESValue.LocationValue</code>, <code>ES.ESValue.PropertyValue</code>,\n  <code>ES.ESValue.ResultValue</code>)</p>\n"}, {"fullname": "ES.ESValue.DatationValue.__init__", "modulename": "ES.ESValue", "qualname": "DatationValue.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val", "slot", "name"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.valName", "modulename": "ES.ESValue", "qualname": "DatationValue.valName", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.DatationValue.valueType", "modulename": "ES.ESValue", "qualname": "DatationValue.valueType", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.DatationValue.init", "modulename": "ES.ESValue", "qualname": "DatationValue.init", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.getInstant", "modulename": "ES.ESValue", "qualname": "DatationValue.getInstant", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.getInterval", "modulename": "ES.ESValue", "qualname": "DatationValue.getInterval", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.bounds", "modulename": "ES.ESValue", "qualname": "DatationValue.bounds", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.DatationValue.Interval", "modulename": "ES.ESValue", "qualname": "DatationValue.Interval", "type": "function", "doc": "<p></p>\n", "parameters": ["args"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.Instant", "modulename": "ES.ESValue", "qualname": "DatationValue.Instant", "type": "function", "doc": "<p></p>\n", "parameters": ["arg"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.value", "modulename": "ES.ESValue", "qualname": "DatationValue.value", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.DatationValue.vInterval", "modulename": "ES.ESValue", "qualname": "DatationValue.vInterval", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.DatationValue.instant", "modulename": "ES.ESValue", "qualname": "DatationValue.instant", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.DatationValue.vInstant", "modulename": "ES.ESValue", "qualname": "DatationValue.vInstant", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.json", "modulename": "ES.ESValue", "qualname": "DatationValue.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option", "string"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.to_bytes", "modulename": "ES.ESValue", "qualname": "DatationValue.to_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.DatationValue.from_bytes", "modulename": "ES.ESValue", "qualname": "DatationValue.from_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "byt"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue", "modulename": "ES.ESValue", "qualname": "LocationValue", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESValue.LocationValue.__init__", "modulename": "ES.ESValue", "qualname": "LocationValue.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val", "shape", "name", "geo", "cart"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.valName", "modulename": "ES.ESValue", "qualname": "LocationValue.valName", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.LocationValue.valueType", "modulename": "ES.ESValue", "qualname": "LocationValue.valueType", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.LocationValue.init", "modulename": "ES.ESValue", "qualname": "LocationValue.init", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val", "shape", "name"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.coorInv", "modulename": "ES.ESValue", "qualname": "LocationValue.coorInv", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.LocationValue.vPointInv", "modulename": "ES.ESValue", "qualname": "LocationValue.vPointInv", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.getShap", "modulename": "ES.ESValue", "qualname": "LocationValue.getShap", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.getPoint", "modulename": "ES.ESValue", "qualname": "LocationValue.getPoint", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.vCodePlus", "modulename": "ES.ESValue", "qualname": "LocationValue.vCodePlus", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.bounds", "modulename": "ES.ESValue", "qualname": "LocationValue.bounds", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.LocationValue.Cuboid", "modulename": "ES.ESValue", "qualname": "LocationValue.Cuboid", "type": "function", "doc": "<p></p>\n", "parameters": ["args"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.Point", "modulename": "ES.ESValue", "qualname": "LocationValue.Point", "type": "function", "doc": "<p></p>\n", "parameters": ["args"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.value", "modulename": "ES.ESValue", "qualname": "LocationValue.value", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.LocationValue.vShap", "modulename": "ES.ESValue", "qualname": "LocationValue.vShap", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.vPoint", "modulename": "ES.ESValue", "qualname": "LocationValue.vPoint", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.vPointX", "modulename": "ES.ESValue", "qualname": "LocationValue.vPointX", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.vPointY", "modulename": "ES.ESValue", "qualname": "LocationValue.vPointY", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.json", "modulename": "ES.ESValue", "qualname": "LocationValue.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option", "string"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.to_bytes", "modulename": "ES.ESValue", "qualname": "LocationValue.to_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.LocationValue.from_bytes", "modulename": "ES.ESValue", "qualname": "LocationValue.from_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "byt"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue", "modulename": "ES.ESValue", "qualname": "PropertyValue", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESValue.PropertyValue.__init__", "modulename": "ES.ESValue", "qualname": "PropertyValue.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue.valName", "modulename": "ES.ESValue", "qualname": "PropertyValue.valName", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.PropertyValue.valueType", "modulename": "ES.ESValue", "qualname": "PropertyValue.valueType", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.PropertyValue.init", "modulename": "ES.ESValue", "qualname": "PropertyValue.init", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue.jsonDict", "modulename": "ES.ESValue", "qualname": "PropertyValue.jsonDict", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue.json", "modulename": "ES.ESValue", "qualname": "PropertyValue.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option", "string"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue.vType", "modulename": "ES.ESValue", "qualname": "PropertyValue.vType", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue.to_bytes", "modulename": "ES.ESValue", "qualname": "PropertyValue.to_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.PropertyValue.from_bytes", "modulename": "ES.ESValue", "qualname": "PropertyValue.from_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "byt"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue", "modulename": "ES.ESValue", "qualname": "ResultValue", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESValue.ResultValue.__init__", "modulename": "ES.ESValue", "qualname": "ResultValue.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val", "ind"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.valName", "modulename": "ES.ESValue", "qualname": "ResultValue.valName", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.ResultValue.valueType", "modulename": "ES.ESValue", "qualname": "ResultValue.valueType", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.ResultValue.init", "modulename": "ES.ESValue", "qualname": "ResultValue.init", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val", "ind"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.setIndValue", "modulename": "ES.ESValue", "qualname": "ResultValue.setIndValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.setValue", "modulename": "ES.ESValue", "qualname": "ResultValue.setValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.json", "modulename": "ES.ESValue", "qualname": "ResultValue.json", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.to_bytes", "modulename": "ES.ESValue", "qualname": "ResultValue.to_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "resIndex", "prp"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.from_bytes", "modulename": "ES.ESValue", "qualname": "ResultValue.from_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "byt", "resInd", "prp"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.isNotNull", "modulename": "ES.ESValue", "qualname": "ResultValue.isNotNull", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.ResultValue.to_float", "modulename": "ES.ESValue", "qualname": "ResultValue.to_float", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet", "modulename": "ES.ESValue", "qualname": "ESSet", "type": "class", "doc": "<p>Classe li\u00e9e \u00e0 la structure interne</p>\n"}, {"fullname": "ES.ESValue.ESSet.__init__", "modulename": "ES.ESValue", "qualname": "ESSet.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ValueClass", "jObj"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.valueList", "modulename": "ES.ESValue", "qualname": "ESSet.valueList", "type": "variable", "doc": "<p>list : list of <code>ES.ESValue</code></p>\n"}, {"fullname": "ES.ESValue.ESSet.initESSet", "modulename": "ES.ESValue", "qualname": "ESSet.initESSet", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ValueClass", "jObj"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.vListName", "modulename": "ES.ESValue", "qualname": "ESSet.vListName", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.ESSet.vList", "modulename": "ES.ESValue", "qualname": "ESSet.vList", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "func"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.majListName", "modulename": "ES.ESValue", "qualname": "ESSet.majListName", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "listVal"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.majList", "modulename": "ES.ESValue", "qualname": "ESSet.majList", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "listVal", "name"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.majListValue", "modulename": "ES.ESValue", "qualname": "ESSet.majListValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "listVal"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.addValue", "modulename": "ES.ESValue", "qualname": "ESSet.addValue", "type": "function", "doc": "<p>if type(value) == ValueClass : val = value\nelse: val = ValueClass(value)\nif ValueClass == ResultValue :</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.nValue", "modulename": "ES.ESValue", "qualname": "ESSet.nValue", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.ESValue.ESSet.jsonESSet", "modulename": "ES.ESValue", "qualname": "ESSet.jsonESSet", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ES_valName", "option"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.jsonSet", "modulename": "ES.ESValue", "qualname": "ESSet.jsonSet", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "option"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.to_bytes", "modulename": "ES.ESValue", "qualname": "ESSet.to_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "nameES", "resIndex", "forma", "prpList"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.from_bytes", "modulename": "ES.ESValue", "qualname": "ESSet.from_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "byt", "prpList"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.boundingBox", "modulename": "ES.ESValue", "qualname": "ESSet.boundingBox", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESValue.ESSet.sort", "modulename": "ES.ESValue", "qualname": "ESSet.sort", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "order", "update"], "funcdef": "def"}, {"fullname": "ES.ESconstante", "modulename": "ES.ESconstante", "qualname": "", "type": "module", "doc": "<p>Created on Sun Aug  1 13:35:28 2021</p>\n\n<p>@author: philippe@loco-labs.io</p>\n\n<p>This module describes the constants and default values used in other modules.</p>\n"}, {"fullname": "ES.ESconstante.Es", "modulename": "ES.ESconstante", "qualname": "Es", "type": "class", "doc": "<p>initialization of constant data.</p>\n"}, {"fullname": "ES.ESconstante.Es.__init__", "modulename": "ES.ESconstante", "qualname": "Es.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.ESconstante.Es.mOption", "modulename": "ES.ESconstante", "qualname": "Es.mOption", "type": "variable", "doc": "<p>Default options for <code>ES.ESObservation.Observation</code></p>\n"}, {"fullname": "ES.ESconstante.Es.vName", "modulename": "ES.ESconstante", "qualname": "Es.vName", "type": "variable", "doc": "<p>name for json classES identification</p>\n"}, {"fullname": "ES.ESconstante.Es.mValObs", "modulename": "ES.ESconstante", "qualname": "Es.mValObs", "type": "variable", "doc": "<p>assignment of ESValue name to ESObs objects</p>\n"}, {"fullname": "ES.ESconstante.Es.esObsClass", "modulename": "ES.ESconstante", "qualname": "Es.esObsClass", "type": "variable", "doc": "<p>ordered list for classES</p>\n"}, {"fullname": "ES.ESconstante.Es.mTypeAtt", "modulename": "ES.ESconstante", "qualname": "Es.mTypeAtt", "type": "variable", "doc": "<p>Assignment of attributes to ESObs objects</p>\n"}, {"fullname": "ES.ESconstante.Es.obsCat", "modulename": "ES.ESconstante", "qualname": "Es.obsCat", "type": "variable", "doc": "<p>Default name for <code>ES.ESObservation.Observation.score</code></p>\n"}, {"fullname": "ES.ESconstante.Es.codeb", "modulename": "ES.ESconstante", "qualname": "Es.codeb", "type": "variable", "doc": "<p>Code for bynary interface <code>ES.ESObservation.Observation.from_bytes</code> and\n<code>ES.ESObservation.Observation.to_bytes</code></p>\n"}, {"fullname": "ES.ESconstante.Es.prop", "modulename": "ES.ESconstante", "qualname": "Es.prop", "type": "variable", "doc": "<p>Dictionnary for property codification (BLE - Environnemental Sensing Service)</p>\n"}, {"fullname": "ES.ESconstante.Es.invProp", "modulename": "ES.ESconstante", "qualname": "Es.invProp", "type": "variable", "doc": "<p>Dictionnary for property codification (BLE - Environnemental Sensing Service)</p>\n"}, {"fullname": "ES.ESconstante.Es.sampling", "modulename": "ES.ESconstante", "qualname": "Es.sampling", "type": "variable", "doc": "<p>Dictionnary for property sampling mode (BLE - Environnemental Sensing Service)</p>\n"}, {"fullname": "ES.ESconstante.Es.invSampling", "modulename": "ES.ESconstante", "qualname": "Es.invSampling", "type": "variable", "doc": "<p>Dictionnary for property sampling mode (BLE - Environnemental Sensing Service)</p>\n"}, {"fullname": "ES.ESconstante.Es.application", "modulename": "ES.ESconstante", "qualname": "Es.application", "type": "variable", "doc": "<p>Dictionnary for property application (BLE - Environnemental Sensing Service)</p>\n"}, {"fullname": "ES.ESconstante.Es.invApplication", "modulename": "ES.ESconstante", "qualname": "Es.invApplication", "type": "variable", "doc": "<p>Dictionnary for property application (BLE - Environnemental Sensing Service)</p>\n"}, {"fullname": "ES.ESconstante.Es.nax", "modulename": "ES.ESconstante", "qualname": "Es.nax", "type": "variable", "doc": "<p>Dictionnary for axis Number</p>\n"}, {"fullname": "ES.ESconstante.Es.axes", "modulename": "ES.ESconstante", "qualname": "Es.axes", "type": "variable", "doc": "<p>Dictionnary for Xarray axis name</p>\n"}, {"fullname": "ES.ESconstante.Es.xattrs", "modulename": "ES.ESconstante", "qualname": "Es.xattrs", "type": "variable", "doc": "<p>Dictionnary for Xarray attrs informations</p>\n"}, {"fullname": "ES.ESconstante.ES", "modulename": "ES.ESconstante", "qualname": "ES", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.EStestunitaire", "modulename": "ES.EStestunitaire", "qualname": "", "type": "module", "doc": "<p>Created on Sun Aug  1 22:05:08 2021</p>\n\n<p>@author: Philippe@loco-labs.io</p>\n\n<p>The <code>ES.EStestunitaire</code> module contains the unit tests (class unittest) for all the \nEnvironmental Sensing functions.</p>\n"}, {"fullname": "ES.EStestunitaire.TestExemples", "modulename": "ES.EStestunitaire", "qualname": "TestExemples", "type": "class", "doc": "<p>A class whose instances are single test cases.</p>\n\n<p>By default, the test code itself should be placed in a method named\n'runTest'.</p>\n\n<p>If the fixture may be used for many test cases, create as\nmany test methods as are needed. When instantiating such a TestCase\nsubclass, specify in the constructor arguments the name of the test method\nthat the instance is to execute.</p>\n\n<p>Test authors should subclass TestCase for their own tests. Construction\nand deconstruction of the test's environment ('fixture') can be\nimplemented by overriding the 'setUp' and 'tearDown' methods respectively.</p>\n\n<p>If it is necessary to override the __init__ method, the base class\n__init__ method must always be called. It is important that subclasses\nshould not change the signature of their __init__ method, since instances\nof the classes are instantiated automatically by parts of the framework\nin order to be run.</p>\n\n<p>When subclassing TestCase, you can set these attributes:</p>\n\n<ul>\n<li>failureException: determines which exception will be raised when\nthe instance's assertion methods fail; test methods raising this\nexception will be deemed to have 'failed' rather than 'errored'.</li>\n<li>longMessage: determines whether long messages (including repr of\nobjects used in assert methods) will be printed on failure in <em>addition</em>\nto any explicit message passed.</li>\n<li>maxDiff: sets the maximum length of a diff in failure messages\nby assert methods using difflib. It is looked up as an instance\nattribute so can be configured by individual tests if required.</li>\n</ul>\n"}, {"fullname": "ES.EStestunitaire.TestExemples.test_creation_observation", "modulename": "ES.EStestunitaire", "qualname": "TestExemples.test_creation_observation", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire", "type": "class", "doc": "<p>Unit tests for <code>ES.ESValue</code>, <code>ES.ESObs</code>, <code>ES.ESElement</code></p>\n"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.opt", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.opt", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_TimeSlot", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_TimeSlot", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ResultValue", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ResultValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_locationValue", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_locationValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_DatationValue", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_DatationValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_propertyValue", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_propertyValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_nameValue", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_nameValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_majValue_majName", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_majValue_majName", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ESSet_box", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ESSet_box", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ESSetLocation", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ESSetLocation", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ESSetDatation", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ESSetDatation", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ESSetResult", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ESSetResult", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ESObs", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ESObs", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObsUnitaire.test_ESElement", "modulename": "ES.EStestunitaire", "qualname": "TestObsUnitaire.test_ESElement", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestBytes", "modulename": "ES.EStestunitaire", "qualname": "TestBytes", "type": "class", "doc": "<p>Unit tests for bytes conversion</p>\n"}, {"fullname": "ES.EStestunitaire.TestBytes.test_location_bytes", "modulename": "ES.EStestunitaire", "qualname": "TestBytes.test_location_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestBytes.test_datation_bytes", "modulename": "ES.EStestunitaire", "qualname": "TestBytes.test_datation_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestBytes.test_property_bytes", "modulename": "ES.EStestunitaire", "qualname": "TestBytes.test_property_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestBytes.test_result_bytes", "modulename": "ES.EStestunitaire", "qualname": "TestBytes.test_result_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestBytes.test_observation_bytes", "modulename": "ES.EStestunitaire", "qualname": "TestBytes.test_observation_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation", "modulename": "ES.EStestunitaire", "qualname": "TestObservation", "type": "class", "doc": "<p>Unit tests for <code>ES.ESObservation.Observation</code></p>\n"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_creation", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_creation", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_vList", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_vList", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_simple", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_simple", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_att", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_att", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_options", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_options", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_maj_type", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_maj_type", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_dim", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_dim", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_majListName_majListValue", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_majListName_majListValue", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_majIndex_iloc", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_majIndex_iloc", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_sort", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_sort", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_add", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_add", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_obs_extend", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_obs_extend", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestObservation.test_sensor", "modulename": "ES.EStestunitaire", "qualname": "TestObservation.test_sensor", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestExports", "modulename": "ES.EStestunitaire", "qualname": "TestExports", "type": "class", "doc": "<p>Unit tests for <code>ES.ESObservation.Observation</code> exports</p>\n"}, {"fullname": "ES.EStestunitaire.TestExports.test__envoi_mongo", "modulename": "ES.EStestunitaire", "qualname": "TestExports.test__envoi_mongo", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestExports.test_geo_interface", "modulename": "ES.EStestunitaire", "qualname": "TestExports.test_geo_interface", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestExports.test_obs_polygon", "modulename": "ES.EStestunitaire", "qualname": "TestExports.test_obs_polygon", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestExports.test_xarray", "modulename": "ES.EStestunitaire", "qualname": "TestExports.test_xarray", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestExports.test_plot", "modulename": "ES.EStestunitaire", "qualname": "TestExports.test_plot", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.EStestunitaire.TestExports.test_exports", "modulename": "ES.EStestunitaire", "qualname": "TestExports.test_exports", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "ES.openlocationcode", "modulename": "ES.openlocationcode", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "ES.openlocationcode.isValid", "modulename": "ES.openlocationcode", "qualname": "isValid", "type": "function", "doc": "<p>Determines if a code is valid.\nTo be valid, all characters must be from the Open Location Code character\nset with at most one separator. The separator can be in any even-numbered\nposition up to the eighth digit.</p>\n", "parameters": ["code"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.isShort", "modulename": "ES.openlocationcode", "qualname": "isShort", "type": "function", "doc": "<p>Determines if a code is a valid short code.\nA short Open Location Code is a sequence created by removing four or more\ndigits from an Open Location Code. It must include a separator\ncharacter.</p>\n", "parameters": ["code"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.isFull", "modulename": "ES.openlocationcode", "qualname": "isFull", "type": "function", "doc": "<p>Determines if a code is a valid full Open Location Code.\nNot all possible combinations of Open Location Code characters decode to\nvalid latitude and longitude values. This checks that a code is valid\nand also that the latitude and longitude values are legal. If the prefix\ncharacter is present, it must be the first character. If the separator\ncharacter is present, it must be after four characters.</p>\n", "parameters": ["code"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.encode", "modulename": "ES.openlocationcode", "qualname": "encode", "type": "function", "doc": "<p>Encode a location into an Open Location Code.\nProduces a code of the specified length, or the default length if no length\nis provided.\nThe length determines the accuracy of the code. The default length is\n10 characters, returning a code of approximately 13.5x13.5 meters. Longer\ncodes represent smaller areas, but lengths &gt; 14 are sub-centimetre and so\n11 or 12 are probably the limit of useful codes.\nArgs:\n  latitude: A latitude in signed decimal degrees. Will be clipped to the\n      range -90 to 90.\n  longitude: A longitude in signed decimal degrees. Will be normalised to\n      the range -180 to 180.\n  codeLength: The number of significant digits in the output code, not\n      including any separator characters.</p>\n", "parameters": ["latitude", "longitude", "codeLength"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.decode", "modulename": "ES.openlocationcode", "qualname": "decode", "type": "function", "doc": "<p>Decodes an Open Location Code into the location coordinates.\nReturns a CodeArea object that includes the coordinates of the bounding\nbox - the lower left, center and upper right.\nArgs:\n  code: The Open Location Code to decode.\nReturns:\n  A CodeArea object that provides the latitude and longitude of two of the\n  corners of the area, the center, and the length of the original code.</p>\n", "parameters": ["code"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.recoverNearest", "modulename": "ES.openlocationcode", "qualname": "recoverNearest", "type": "function", "doc": "<p>Recover the nearest matching code to a specified location.\nGiven a short code of between four and seven characters, this recovers\nthe nearest matching full code to the specified location.\nArgs:\n  code: A valid OLC character sequence.\n  referenceLatitude: The latitude (in signed decimal degrees) to use to\n      find the nearest matching full code.\n  referenceLongitude: The longitude (in signed decimal degrees) to use\n      to find the nearest matching full code.\nReturns:\n  The nearest full Open Location Code to the reference location that matches\n  the short code. If the passed code was not a valid short code, but was a\n  valid full code, it is returned with proper capitalization but otherwise\n  unchanged.</p>\n", "parameters": ["code", "referenceLatitude", "referenceLongitude"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.shorten", "modulename": "ES.openlocationcode", "qualname": "shorten", "type": "function", "doc": "<p>Remove characters from the start of an OLC code.\nThis uses a reference location to determine how many initial characters\ncan be removed from the OLC code. The number of characters that can be\nremoved depends on the distance between the code center and the reference\nlocation.\nThe minimum number of characters that will be removed is four. If more than\nfour characters can be removed, the additional characters will be replaced\nwith the padding character. At most eight characters will be removed.\nThe reference location must be within 50% of the maximum range. This ensures\nthat the shortened code will be able to be recovered using slightly different\nlocations.\nArgs:\n  code: A full, valid code to shorten.\n  latitude: A latitude, in signed decimal degrees, to use as the reference\n      point.\n  longitude: A longitude, in signed decimal degrees, to use as the reference\n      point.\nReturns:\n  Either the original code, if the reference location was not close enough,\n  or the .</p>\n", "parameters": ["code", "latitude", "longitude"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.clipLatitude", "modulename": "ES.openlocationcode", "qualname": "clipLatitude", "type": "function", "doc": "<p>Clip a latitude into the range -90 to 90.\nArgs:\n  latitude: A latitude in signed decimal degrees.</p>\n", "parameters": ["latitude"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.computeLatitudePrecision", "modulename": "ES.openlocationcode", "qualname": "computeLatitudePrecision", "type": "function", "doc": "<p>Compute the latitude precision value for a given code length. Lengths &lt;=\n10 have the same precision for latitude and longitude, but lengths &gt; 10\nhave different precisions due to the grid method having fewer columns than\nrows.</p>\n", "parameters": ["codeLength"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.normalizeLongitude", "modulename": "ES.openlocationcode", "qualname": "normalizeLongitude", "type": "function", "doc": "<p>Normalize a longitude into the range -180 to 180, not including 180.\nArgs:\n  longitude: A longitude in signed decimal degrees.</p>\n", "parameters": ["longitude"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.CodeArea", "modulename": "ES.openlocationcode", "qualname": "CodeArea", "type": "class", "doc": "<p>Coordinates of a decoded Open Location Code.\nThe coordinates include the latitude and longitude of the lower left and\nupper right corners and the center of the bounding box for the area the\ncode represents.\nAttributes:\n  latitude_lo: The latitude of the SW corner in degrees.\n  longitude_lo: The longitude of the SW corner in degrees.\n  latitude_hi: The latitude of the NE corner in degrees.\n  longitude_hi: The longitude of the NE corner in degrees.\n  latitude_center: The latitude of the center in degrees.\n  longitude_center: The longitude of the center in degrees.\n  code_length: The number of significant characters that were in the code.\n      This excludes the separator.</p>\n"}, {"fullname": "ES.openlocationcode.CodeArea.__init__", "modulename": "ES.openlocationcode", "qualname": "CodeArea.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "latitudeLo", "longitudeLo", "latitudeHi", "longitudeHi", "codeLength"], "funcdef": "def"}, {"fullname": "ES.openlocationcode.CodeArea.latlng", "modulename": "ES.openlocationcode", "qualname": "CodeArea.latlng", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.addField("qualname");
            this.addField("fullname");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();